{
    "version": "https://jsonfeed.org/version/1",
    "title": "Squirre17 Blog • All posts by \"blockchain\" tag",
    "description": "中年矮臭挫油腻二刺猿死肥宅男什么都不会什么都做不来的废物",
    "home_page_url": "https://Squirre17.github.io",
    "items": [
        {
            "id": "https://squirre17.github.io/2022/08/27/BlockChain-from-scratch-mapping/",
            "url": "https://squirre17.github.io/2022/08/27/BlockChain-from-scratch-mapping/",
            "title": "BlockChain-from-scratch-mapping",
            "date_published": "2022-08-27T08:51:10.000Z",
            "content_html": "<p><a href=\"https://capturetheether.com/challenges/math/mapping/\">Capture the Ether - Mapping</a><br>\n 从一道题入门 blockchain</p>\n<h2 id=\"evm存储简介\"><a class=\"markdownIt-Anchor\" href=\"#evm存储简介\">#</a> EVM 存储简介</h2>\n<p>solidity 编译后的数据<br>\n是放在 slot 的结构中<br>\n slot 有 2 ^ 256 个<br>\n每一个有 256 位</p>\n<p>对于 solidity 中的可以在编译期间确定的静态元素<br>\n solc 会将其依次放入内存插槽中（slot）<br>\n<img src=\"/2022/08/27/BlockChain-from-scratch-mapping/1.png\" alt><br>\n这里 bcd 都是 256 位<br>\n所以放在 slot [0…2]<br>\n 但如果是可变长数据结构如果是 array 或者 map<br>\n 值会被放在其他地方 为了性能 这里是直接对当前的 idx 取 keccak<br>\n 比如 <code>keccak(0) = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563</code> <br>\n 如果 <code>slot[0]</code>  是 array 的话 那么数据就会被放在<br>\n <code>slot[0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563]</code>  里</p>\n<p>注意这里 keccak 是对补齐后的字符串进行 hash 的 而不是对数字<br>\n所以需要 padding 一下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">padding</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">\tx = x.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> s = <span class=\"string\">&quot;0x&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">64</span> - x.<span class=\"property\">length</span>); i++) &#123;</span><br><span class=\"line\">\t\ts += <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts += x</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>solidity 同样存在和 c 一样内存对齐的概念 不再赘述</p>\n<h2 id=\"cte-mapping\"><a class=\"markdownIt-Anchor\" href=\"#cte-mapping\">#</a> cte-mapping</h2>\n<p>首先看合约 map 的 kv 可控</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^<span class=\"number\">0.4</span><span class=\"number\">.21</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">contract MappingChallenge &#123;</span><br><span class=\"line\">    <span class=\"type\">bool</span> public isComplete;</span><br><span class=\"line\">    uint256[] <span class=\"built_in\">map</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    function <span class=\"title function_\">set</span><span class=\"params\">(uint256 key, uint256 value)</span> public &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Expand dynamic array as needed</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">map</span>.length &lt;= key) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">map</span>.length = key + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">map</span>[key] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function <span class=\"title function_\">get</span><span class=\"params\">(uint256 key)</span> public view <span class=\"title function_\">returns</span> <span class=\"params\">(uint256)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">map</span>[key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>连接到合约</p>\n<p>set 是可以控制下标 那么给 <code>isComplete</code>  覆盖掉就行了 十分清楚<br>\n map 是可变结构 每个成员是存放在 <code>keccak(padding(1))</code>  依次往上的地方<br>\n可以打印看到</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ethers = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ethers&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs-extra&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dotenv&#x27;</span>).<span class=\"title function_\">config</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Web3</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;web3&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> web3 =  <span class=\"keyword\">new</span> <span class=\"title class_\">Web3</span>(<span class=\"string\">&quot;your_rpc_url&quot;</span>)</span><br><span class=\"line\">contractAddr = <span class=\"string\">&quot;your_account_addr&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">cl</span> = x =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x)</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">padding</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">\tx = x.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> s = <span class=\"string\">&quot;0x&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i %3C (<span class=\"number\">64</span> - x.<span class=\"property\">length</span>); i++) &#123;</span><br><span class=\"line\">\t\ts += <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts += x</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getSlot</span>(<span class=\"params\">idx</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> ret = <span class=\"keyword\">await</span> web3.<span class=\"property\">eth</span>.<span class=\"title function_\">getStorageAt</span>(contractAddr, idx)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getShaIdx</span>(<span class=\"params\">idx</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> ret = <span class=\"keyword\">await</span> web3.<span class=\"property\">utils</span>.<span class=\"title function_\">sha3</span>(<span class=\"title function_\">padding</span>(idx))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">cl</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">getSlot</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">\t<span class=\"title function_\">cl</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">getSlot</span>(<span class=\"number\">1</span>))</span><br><span class=\"line\">\t<span class=\"title function_\">cl</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">getShaIdx</span>(<span class=\"number\">1</span>))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">\t.<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">\t.<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err),</span><br><span class=\"line\">\t\tprocess.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125;)&gt;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class=\"line\">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class=\"line\">0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6</span><br></pre></td></tr></table></figure>\n<p>第三个就是我们 map 第一个元素存放的位置<br>\n用 <code>2**256</code>  减一下就是偏移了</p>\n<p><img src=\"/2022/08/27/BlockChain-from-scratch-mapping/2.png\" alt></p>\n<p><img src=\"/2022/08/27/BlockChain-from-scratch-mapping/3.png\" alt></p>\n",
            "tags": [
                "Blockchain"
            ]
        }
    ]
}